@-webkit-keyframes load3{0%{transform:rotate(0deg)}to{transform:rotate(360deg)}}@keyframes load3{0%{transform:rotate(0deg)}to{transform:rotate(360deg)}}*{margin:0;padding:0;box-sizing:border-box}ol,ul{list-style:none}button,input{background:0 0;border:0;font:inherit}input:focus{outline:0}a{text-decoration:none}.modal{background:rgba(33,33,33,.639);height:100%;width:100%;position:fixed;top:0;left:0;z-index:7;display:flex;flex-direction:row;align-items:center;justify-content:center}.modal__character__inner{background:#fff;height:400px;width:700px;position:relative}.character{height:100%}.character__details{display:flex;gap:20px;height:100%}.character__info{padding:20px 30px 20px 15px;display:flex;flex-direction:column;height:100%;width:60%}.character__img{background:#1e1919;min-width:285px}.character-image{width:285px;height:400px;object-fit:cover}.character__name{font-weight:600;font-size:20px;text-transform:uppercase;text-align:center;max-width:90%;margin-bottom:10px}.character__buttons{flex:0 0 auto;gap:8px;display:flex;flex-direction:row;align-items:center;justify-content:space-between}.character__button{font:600 12px "Exo",sans-serif;height:50px;width:150px;text-transform:uppercase}.view-comics{border:1.5px solid #232323}.add{background:#ed1d24;color:#fff}.info__inner{flex:1 0 auto}.comics__link{font-size:13px;color:inherit}.comics__link:hover{font-weight:500}.close{position:absolute;right:10px;top:10px;cursor:pointer}.head{font-weight:600;font-size:14px;margin-bottom:10px}.description-text{font-size:13px;margin-bottom:15px;color:#605e5e}.comics__list{color:#605e5e}.loader{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%)}.loader__inner{font-size:10px;margin:50px auto;text-indent:-9999em;width:11em;height:11em;border-radius:50%;background:#696969;background:linear-gradient(to right,#696969 10%,rgba(105,105,105,0) 42%);position:relative;animation:load3 1.4s infinite linear;transform:translateZ(0)}.loader__inner:before{width:50%;height:50%;background:#696969;border-radius:100% 0 0 0;position:absolute;top:0;left:0;content:""}.loader__inner:after{background:#fff;width:75%;height:75%;border-radius:50%;content:"";margin:auto;position:absolute;top:0;left:0;bottom:0;right:0}.hide{display:none}body{font-family:"Exo",sans-serif}.wrapper{width:100%}#main{height:100vh;overflow:hidden;position:relative}._container{max-width:1200px;margin:0 auto;padding:0 15px}.header{background:#232323;font-family:"Exo",sans-serif;width:100%;height:90px;position:absolute;top:0;left:0}.logo{display:block}.logo img{height:50px}.nav,.nav__list{height:100%}.nav__list{display:flex;flex-direction:row;align-items:center;justify-content:center;padding:10px 20px}.nav__list li:not(:last-child){margin-right:30px}.nav__link{font:500 14px "Exo",sans-serif;color:#fff;text-transform:uppercase;transition:.3s}.nav__link:hover{color:#ed1d24}.nav__burger{display:none}.nav__close{position:absolute;top:50%;right:20px;transform:translateY(-50%);z-index:200}.banner{height:500px;width:100%;background:url(/img/banner.jpg);background-size:cover;background-repeat:no-repeat;background-attachment:fixed}.banner__inner{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);color:#fff;width:90%}.banner__heading{font-size:45px;text-align:center;text-transform:uppercase;margin-bottom:20px}.banner__inputs{display:flex;flex-direction:row;align-items:center;justify-content:center}.user-input{height:40px;width:300px;background:#fff;font-size:14px;padding:10px;display:inline-block}.user-input::placeholder{font:14px "Exo",sans-serif;text-transform:uppercase;color:#464545}.user-submit{display:inline-block;color:#fff;text-transform:uppercase;display:flex;flex-direction:row;align-items:center;justify-content:center;height:40px;width:180px;font-size:14px;background:#ed1d24;padding:10px}.content-section{padding:30px 0}.content-section__heading{text-transform:uppercase;color:#232323;text-align:center;font-size:25px}.content-section__content{max-width:100%;display:grid;grid-template-columns:repeat(5,1fr);grid-template-rows:1fr;row-gap:20px;column-gap:20px}.content-section__button{height:50px;width:200px;background:#ed1d24;color:#fff;font-size:14px;text-transform:uppercase;display:block;display:flex;flex-direction:row;align-items:center;justify-content:center;margin:10px auto}.content-section__search-character{width:fit-content;margin:20px 0;position:relative;display:flex;flex-direction:row;align-items:center;justify-content:flex-start}.hero__block{background:#232323;min-width:218px;height:350px;position:relative;cursor:pointer;overflow:hidden}.hero__block:after{content:"";height:10px;width:100%;background:#ed1d24;position:absolute;bottom:0;z-index:0;transition:.3s}.hero__block:hover:after{height:90px}.hero__block:hover img{transition:.3s;transform:scale(1.2)}.hero-image{height:260px;width:100%;margin-bottom:20px}.hero-image img{height:100%;width:100%;object-fit:cover;transition:.3s}.hero__desc{font:500 18px "Roboto",sans-serif;position:absolute;z-index:3;text-transform:uppercase;color:#fff;margin-left:10px}.search{border-bottom:2px solid #000;width:300px;padding:10px 0 10px 10px}.search-btn{position:absolute;top:0;right:0;z-index:5;height:fit-content;cursor:pointer}.search-btn img{height:36px}@media screen and (max-width:1200px){.content-section__content{grid-template-columns:repeat(4,1fr)}}@media screen and (max-width:990px){.content-section__content{grid-template-columns:repeat(3,1fr)}.banner__heading{font-size:35px}.user-input{width:250px}.user-submit{width:150px}}@media screen and (max-width:768px){.header{height:70px}.logo{display:none}.nav__list{position:fixed;display:flex;flex-direction:column;align-items:center;justify-content:center;height:100vh;width:100%;z-index:100;background-color:rgba(43,43,44,.5);backdrop-filter:blur(96px);top:0;right:-100%;transition:.3s}.nav__list li:not(:last-child){margin-right:0}.nav__burger{position:absolute;top:50%;right:20px;transform:translateY(-50%);z-index:200;display:block}.nav__link{text-align:center;font-size:20px;line-height:200%}}@media screen and (max-width:750px){.content-section__content{grid-template-columns:repeat(2,1fr)}}@media screen and (max-width:580px){.banner__heading{font-size:30px}.banner__inputs{flex-direction:column}.banner__inputs>*{width:100%}.banner .user-input{margin-bottom:15px}}@media screen and (max-width:490px){.content-section__content{grid-template-columns:repeat(1,1fr)}.content-section__search-character,.search{width:100%}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4ubWluLmNzcyIsIm1haW4uc2NzcyIsImJsb2Nrcy9udWxsLnNjc3MiLCJibG9ja3MvbWl4aW5zLnNjc3MiLCJibG9ja3MvY2hhcmFjdGVyLW1vZGFsLnNjc3MiLCJibG9ja3MvbG9hZGVyLnNjc3MiLCJibG9ja3MvaGVhZGVyLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkEsQUFxTUEseUJBQ0UsRSxDQUNFLHNCLENDMUxBLEUsQ0Q4TEEsMEIsQUFJSixpQkFDRSxFLENDM0xGLHNCLENEK0xFLEUsQ0M1TEYsMEJDeEJBLEMsQ0FDSSxRLENBQ0EsUyxDQUNBLHFCLENGSUosRSxDRUZBLEUsQ0ZHRSxlLENBYUYsTSxDQVZBLEssQ0VBSSxjLENBQ0EsUSxDRkVGLFksQ0FHRixXLENBQ0UsUyxDQVNGLEMsQ0FDRSxvQixDQUdGLE0sQ0dkSSw4QixDQ2RBLFcsQ0FDQSxVLENBQ0EsYyxDQUVBLEssQ0ROQSxNLENBQ0EsUyxDQUNBLFksQ0FDQSxrQixDSHFDRixrQixDSS9CRSxzQixDSm1DSix3QixDSWhDUSxlLENKa0NOLFksQ0FDQSxXLENJL0JGLGlCLENBRUksVSxDQUNJLFcsQ0pvQ1IsbUIsQ0kvQkksWSxDQUNJLFEsQ0FFQSxXLENKa0NSLGdCLENBQ0UsMkIsQ0k3QkUsWSxDQUNJLHFCLENBSUEsVyxDSjRCTixTLENBR0YsZSxDSXpCUSxrQixDSjJCTixlLENBR0YsZ0IsQ0l4QlEsVyxDQUNBLFksQ0FDQSxnQixDQU1KLGdCLENBQ0ksZSxDQUNBLGMsQ0Q1REosd0IsQ0FDQSxpQixDQUNBLGEsQ0FDQSxrQixDSHNGSixtQixDR3pFSSxhLENDbURJLE8sQ0FDQSxZLENBQ0Esa0IsQ0FDQSxrQixDSnlCTiw2QixDQUdGLGtCLENBQ0UsOEIsQ0FDQSxXLENJdEJGLFcsQ0FDSSx3QixDSjBCSixZLENJdkJBLDBCLENKMkJBLEksQ0l0Qkksa0IsQ0FDSSxVLENBR0EsWSxDQUNJLGEsQ0FLWixhLENBQ0ksYyxDQUNBLGEsQ0p3QkosbUIsQ0FDRSxlLENBR0YsTSxDSXBCSSxpQixDSnNCRixVLENBQ0EsUSxDSXBCRixjLENKd0JBLEssQ0FDRSxlLENBQ0EsYyxDSXBCRixrQixDSndCQSxpQixDSzVJQSxjLENBQ0ksa0IsQ0FDQSxhLENMZ0pKLGEsQ0s3SVEsYSxDTGlKUixPLENLN0lZLGlCLENBQ0EsTyxDQUNBLFEsQ0FDQSw4QixDTGlKWixjLENLN0lZLGMsQ0wrSVYsZ0IsQ0s3SVUsbUIsQ0FDSSxVLENBQ0EsVyxDQUNBLGlCLENBQ0Esa0IsQ0FDQSx3RSxDQUNBLGlCLENBQ0Esb0MsQ0FDQSx1QixDTGlKaEIscUIsQ0s1SWdCLFMsQ0FDQSxVLENBQ0Esa0IsQ0FDQSx3QixDQUNBLGlCLENBQ0EsSyxDQUNBLE0sQ0FDQSxVLENMZ0poQixvQixDQUNFLGUsQ0t6SUYsUyxDQUNJLFUsQ0wySUYsaUIsQ0FDQSxVLENLeklFLFcsQ0wySUYsaUIsQ0FDQSxLLENBQ0EsTSxDS3pJRixRLENBQ0ksTyxDTGlLSixLLENBQ0UsWSxDQUdGLEksQ0M1TEksNEIsQ0tqQ0osUSxDQUNJLFUsQ05vT0osSyxDTWhPSSxZLENBQ0EsZSxDQUNBLGlCLENBSUosVyxDQUNJLGdCLENOaU9GLGEsQ01oT0UsYyxDTm9PSixPLENNL05BLGtCLENBQ0ksNEIsQ05pT0YsVSxDTS9ORSxXLENBQ0ksaUIsQ0hyQkosSyxDQUNBLE0sQ0h5UEosSyxDQUNFLGEsQ0FHRixTLENNN05JLFcsQ05pT0osSSxDQUlBLFUsQ01qT1EsVyxDTmlPUixVLENNNU5ZLFksQ04rTlYsa0IsQ00zTkUsa0IsQ0FDSSxzQixDTjZOTixpQixDQUdGLGtCTTVOUSxZLENBQ0EsaUIsQ04rTlIsVSxDQUNFLDhCLENDaFBGLFUsQ0VyQkksd0IsQ0FDQSxjLENIMFFKLGdCLENDaFBJLGEsQ0RvUEosWSxDQ2hQUSxZLENEb1BSLFcsQ0MvT1EsaUIsQ0RpUE4sTyxDQzlPRSxVLENBQ0ksMEIsQ0FDQSxXLENEa1BSLE8sQ0M3T0ksWSxDRTdEQSxVLENBQ0EsK0IsQ0FDQSxxQixDQUNBLDJCLENINlNGLDJCLENBR0YsYyxDR25TSSxpQixDRnNESSxPLENBQ0EsUSxDQUNBLDhCLENBQ0EsVSxDRGdQTixTLENBR0YsZ0IsQ0M5T1ksYyxDQUNBLGlCLENEZ1BWLHdCLENDN09FLGtCLENEaVBKLGUsQ0duVUksWSxDQUNBLGtCLENBQ0Esa0IsQ0FDQSxzQixDSHVVSixXLENDOU9RLFcsQ0FDQSxXLENEZ1BOLGUsQ0FDQSxjLENDNU9GLFksQ0FDSSxvQixDRGdQSix3QixDQzVPUSwwQixDQUNBLHdCLENBQ0EsYSxDRGdQUixZLENHbFZJLG9CLENBQ0EsVSxDQUNBLHdCLENBQ0EsWSxDQUNBLGtCLENIb1ZGLGtCLENDOU9FLHNCLENFbEdBLFcsQ0FDQSxXLENGbUdJLGMsQ0FDQSxrQixDQUNBLFksQ0RtUFIsZ0IsQ0d2V0ksYyxDSDJXSix5QixDQUNFLHdCLENDL09FLGEsQ0FDSSxpQixDQUNBLGMsQ0RtUFIseUIsQ0dqWEksYyxDQUNBLFksQ0htWEYsbUMsQ0FDQSxzQixDQy9PRSxZLENBQ0ksZSxDRG1QUix3QixDQzlPUSxXLENBQ0EsVyxDRGdQTixrQixDQzdPTSxVLENBQ0ksYyxDRXBJUix3QixDQUNBLGEsQ0ZxSVEsWSxDQUVBLGtCLENBQ0Esa0IsQ0FDQSxzQixDQUVBLGdCLENEZ1BaLGtDLENBQ0UsaUIsQ0MzT00sYSxDQUNJLGlCLENBQ0EsWSxDRDZPVixrQixDQ3pPRSxrQixDRXhKQSwwQixDSHNZSixZLENDM09RLGtCLENFdEpKLGUsQ0FDQSxZLENBQ0EsaUIsQ0ZzSlEsYyxDRCtPVixlLENBR0Ysa0IsQ0MxT1EsVSxDQUNBLFcsQ0FDQSxVLENBQ0Esa0IsQ0FDQSxpQixDQUVBLFEsQ0QyT04sUyxDQUNBLGMsQ0FHRix3QixDQ3hPSSxXLENENE9KLHNCLENDdk9RLGMsQ0FDQSxvQixDRDJPUixXLENBQ0UsWSxDQ3hPTSxVLENBQ0ksa0IsQ0FLWixlLENBQ0ksVyxDRHdPRixVLENBQ0EsZ0IsQ0FDQSxjLENBR0YsVyxDQUNFLGlDLENBQ0EsaUIsQ0NyT00sUyxDRHVPTix3QixDQUNBLFUsQ0FDQSxnQixDQUdGLE8sQ0NwT1EsNEIsQ0RzT04sVyxDQUNBLHdCLENBR0YsVyxDQUNFLGlCLENBQ0EsSyxDQUNBLE8sQ0NuT0UsUyxDRHFPRixrQixDQUNBLGMsQ0FHRixlLENBQ0UsVyxDQUdGLHFDQUNFLHlCLENDck9VLHFDLEFEME9aLG9DQUNFLHlCLENDcE9VLG1DLENEd09WLGdCLENBQ0UsYyxDQUdGLFcsQ0NuT1UsVyxDRHVPVixZLENBQ0UsYSxBQUlKLG9DQUNFLE8sQ0FDRSxXLENBR0YsSyxDQUNFLFksQ0M1TkksVSxDQUNJLGMsQ0RnT1IsWSxDQzlOSSxxQixDQUNJLGtCLENEZ09SLHNCLENDOU5RLFksQ0FDSSxVLENEZ09aLFcsQ0M3Tkksa0MsQ0FDSSwwQixDRCtOUixLLENBQ0EsVyxDQzNOSixjLENEK05FLGtCQUFrQixZLENBQ2hCLGMsQ0FHRixZLENBQ0UsaUIsQ0FDQSxPLENBQ0EsVSxDQUNBLDBCLENBQ0EsVyxDQUNBLGEsQ0FHRixVLENBQ0UsaUIsQ0FDQSxjLENBQ0Esa0IsQUFJSixvQ0FDRSx5QixDQUNFLHFDLEFBSUosb0NBQ0UsZ0IsQ0FDRSxjLENBR0YsZSxDQUNFLHFCLENBR0YsaUIsQ0FDRSxVLENBR0YsbUIsQ0FDRSxvQixBQUlKLG9DQUNFLHlCLENBQ0UsbUMsQ0FHRixrQyxDQUNBLE8sQ0FDRSxZIiwiZmlsZSI6Im1haW4ubWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIioge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbnVsLFxub2wge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5pbnB1dCB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IG5vbmU7XG4gIGZvbnQ6IGluaGVyaXQ7XG59XG5cbmlucHV0OmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZTtcbn1cblxuYnV0dG9uIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogbm9uZTtcbiAgZm9udDogaW5oZXJpdDtcbn1cblxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLm1vZGFsIHtcbiAgYmFja2dyb3VuZDogcmdiYSgzMywgMzMsIDMzLCAwLjYzOSk7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB6LWluZGV4OiA3O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLm1vZGFsX19jaGFyYWN0ZXJfX2lubmVyIHtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIGhlaWdodDogNDAwcHg7XG4gIHdpZHRoOiA3MDBweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uY2hhcmFjdGVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uY2hhcmFjdGVyX19kZXRhaWxzIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZ2FwOiAyMHB4O1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5jaGFyYWN0ZXJfX2luZm8ge1xuICBwYWRkaW5nOiAyMHB4IDMwcHggMjBweCAxNXB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiA2MCU7XG59XG5cbi5jaGFyYWN0ZXJfX2ltZyB7XG4gIGJhY2tncm91bmQ6IHJnYigzMCwgMjUsIDI1KTtcbiAgbWluLXdpZHRoOiAyODVweDtcbn1cblxuLmNoYXJhY3Rlci1pbWFnZSB7XG4gIHdpZHRoOiAyODVweDtcbiAgaGVpZ2h0OiA0MDBweDtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG59XG5cbi5jaGFyYWN0ZXJfX25hbWUge1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXNpemU6IDIwcHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWF4LXdpZHRoOiA5MCU7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG5cbi5jaGFyYWN0ZXJfX2J1dHRvbnMge1xuICBmbGV4OiAwIDAgYXV0bztcbiAgZ2FwOiA4cHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cblxuLmNoYXJhY3Rlcl9fYnV0dG9uIHtcbiAgZm9udDogNjAwIDEycHggXCJFeG9cIiwgc2Fucy1zZXJpZjtcbiAgaGVpZ2h0OiA1MHB4O1xuICB3aWR0aDogMTUwcHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5cbi52aWV3LWNvbWljcyB7XG4gIGJvcmRlcjogMS41cHggc29saWQgIzIzMjMyMztcbn1cblxuLmFkZCB7XG4gIGJhY2tncm91bmQ6ICNFRDFEMjQ7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLmluZm9fX2lubmVyIHtcbiAgZmxleDogMSAwIGF1dG87XG59XG5cbi5jb21pY3NfX2xpbmsge1xuICBmb250LXNpemU6IDEzcHg7XG4gIGNvbG9yOiBpbmhlcml0O1xufVxuXG4uY29taWNzX19saW5rOmhvdmVyIHtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cblxuLmNsb3NlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMTBweDtcbiAgdG9wOiAxMHB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5oZWFkIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuXG4uZGVzY3JpcHRpb24tdGV4dCB7XG4gIGZvbnQtc2l6ZTogMTNweDtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcbiAgY29sb3I6ICM2MDVFNUU7XG59XG5cbi5jb21pY3NfX2xpc3Qge1xuICBjb2xvcjogIzYwNUU1RTtcbn1cblxuLmxvYWRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG59XG5cbi5sb2FkZXJfX2lubmVyIHtcbiAgZm9udC1zaXplOiAxMHB4O1xuICBtYXJnaW46IDUwcHggYXV0bztcbiAgdGV4dC1pbmRlbnQ6IC05OTk5ZW07XG4gIHdpZHRoOiAxMWVtO1xuICBoZWlnaHQ6IDExZW07XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZDogIzY5Njk2OTtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjNjk2OTY5IDEwJSwgcmdiYSgxMDUsIDEwNSwgMTA1LCAwKSA0MiUpO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGFuaW1hdGlvbjogbG9hZDMgMS40cyBpbmZpbml0ZSBsaW5lYXI7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcbn1cblxuLmxvYWRlcl9faW5uZXI6YmVmb3JlIHtcbiAgd2lkdGg6IDUwJTtcbiAgaGVpZ2h0OiA1MCU7XG4gIGJhY2tncm91bmQ6ICM2OTY5Njk7XG4gIGJvcmRlci1yYWRpdXM6IDEwMCUgMCAwIDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICBjb250ZW50OiBcIlwiO1xufVxuXG4ubG9hZGVyX19pbm5lcjphZnRlciB7XG4gIGJhY2tncm91bmQ6ICNmZmZmZmY7XG4gIHdpZHRoOiA3NSU7XG4gIGhlaWdodDogNzUlO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIG1hcmdpbjogYXV0bztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgcmlnaHQ6IDA7XG59XG5cbkAtd2Via2l0LWtleWZyYW1lcyBsb2FkMyB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcbiAgfVxuXG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XG4gIH1cbn1cblxuQGtleWZyYW1lcyBsb2FkMyB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcbiAgfVxuXG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XG4gIH1cbn1cblxuLmhpZGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG5ib2R5IHtcbiAgZm9udC1mYW1pbHk6IFwiRXhvXCIsIHNhbnMtc2VyaWY7XG59XG5cbi53cmFwcGVyIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbiNtYWluIHtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uX2NvbnRhaW5lciB7XG4gIG1heC13aWR0aDogMTIwMHB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgcGFkZGluZzogMCAxNXB4O1xufVxuXG4uaGVhZGVyIHtcbiAgYmFja2dyb3VuZDogIzIzMjMyMztcbiAgZm9udC1mYW1pbHk6IFwiRXhvXCIsIHNhbnMtc2VyaWY7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDkwcHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xufVxuXG4ubG9nbyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ubG9nbyBpbWcge1xuICBoZWlnaHQ6IDUwcHg7XG59XG5cbi5uYXYge1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5uYXZfX2xpc3Qge1xuICBoZWlnaHQ6IDEwMCU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBwYWRkaW5nOiAxMHB4IDIwcHg7XG59XG5cbi5uYXZfX2xpc3QgbGk6bm90KDpsYXN0LWNoaWxkKSB7XG4gIG1hcmdpbi1yaWdodDogMzBweDtcbn1cblxuLm5hdl9fbGluayB7XG4gIGZvbnQ6IDUwMCAxNHB4IFwiRXhvXCIsIHNhbnMtc2VyaWY7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgdHJhbnNpdGlvbjogMC4zcztcbn1cblxuLm5hdl9fbGluazpob3ZlciB7XG4gIGNvbG9yOiAjRUQxRDI0O1xufVxuXG4ubmF2X19idXJnZXIge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4ubmF2X19jbG9zZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIHJpZ2h0OiAyMHB4O1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gIHotaW5kZXg6IDIwMDtcbn1cblxuLmJhbm5lciB7XG4gIGhlaWdodDogNTAwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kOiB1cmwoL2ltZy9iYW5uZXIuanBnKTtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBmaXhlZDtcbn1cblxuLmJhbm5lcl9faW5uZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICBjb2xvcjogd2hpdGU7XG4gIHdpZHRoOiA5MCU7XG59XG5cbi5iYW5uZXJfX2hlYWRpbmcge1xuICBmb250LXNpemU6IDQ1cHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuLmJhbm5lcl9faW5wdXRzIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi51c2VyLWlucHV0IHtcbiAgaGVpZ2h0OiA0MHB4O1xuICB3aWR0aDogMzAwcHg7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBmb250LXNpemU6IDE0cHg7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLnVzZXItaW5wdXQ6OnBsYWNlaG9sZGVyIHtcbiAgZm9udDogMTRweCBcIkV4b1wiLCBzYW5zLXNlcmlmO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBjb2xvcjogIzQ2NDU0NTtcbn1cblxuLnVzZXItc3VibWl0IHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBjb2xvcjogd2hpdGU7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBoZWlnaHQ6IDQwcHg7XG4gIHdpZHRoOiAxODBweDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBiYWNrZ3JvdW5kOiAjRUQxRDI0O1xuICBwYWRkaW5nOiAxMHB4O1xufVxuXG4uY29udGVudC1zZWN0aW9uIHtcbiAgcGFkZGluZzogMzBweCAwO1xufVxuXG4uY29udGVudC1zZWN0aW9uX19oZWFkaW5nIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgY29sb3I6ICMyMzIzMjM7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAyNXB4O1xufVxuXG4uY29udGVudC1zZWN0aW9uX19jb250ZW50IHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg1LCAxZnIpO1xuICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmcjtcbiAgcm93LWdhcDogMjBweDtcbiAgY29sdW1uLWdhcDogMjBweDtcbn1cblxuLmNvbnRlbnQtc2VjdGlvbl9fYnV0dG9uIHtcbiAgaGVpZ2h0OiA1MHB4O1xuICB3aWR0aDogMjAwcHg7XG4gIGJhY2tncm91bmQ6ICNFRDFEMjQ7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgZm9udC1zaXplOiAxNHB4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIG1hcmdpbjogMTBweCBhdXRvO1xufVxuXG4uY29udGVudC1zZWN0aW9uX19zZWFyY2gtY2hhcmFjdGVyIHtcbiAgd2lkdGg6IGZpdC1jb250ZW50O1xuICBtYXJnaW46IDIwcHggMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG59XG5cbi5oZXJvX19ibG9jayB7XG4gIGJhY2tncm91bmQ6ICMyMzIzMjM7XG4gIG1pbi13aWR0aDogMjE4cHg7XG4gIGhlaWdodDogMzUwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uaGVyb19fYmxvY2s6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBoZWlnaHQ6IDEwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kOiAjRUQxRDI0O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMDtcbiAgei1pbmRleDogMDtcbiAgdHJhbnNpdGlvbjogMC4zcztcbn1cblxuLmhlcm9fX2Jsb2NrOmhvdmVyOmFmdGVyIHtcbiAgaGVpZ2h0OiA5MHB4O1xufVxuXG4uaGVyb19fYmxvY2s6aG92ZXIgaW1nIHtcbiAgdHJhbnNpdGlvbjogMC4zcztcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjIpO1xufVxuXG4uaGVyby1pbWFnZSB7XG4gIGhlaWdodDogMjYwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuXG4uaGVyby1pbWFnZSBpbWcge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgdHJhbnNpdGlvbjogMC4zcztcbn1cblxuLmhlcm9fX2Rlc2Mge1xuICBmb250OiA1MDAgMThweCBcIlJvYm90b1wiLCBzYW5zLXNlcmlmO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDM7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG59XG5cbi5zZWFyY2gge1xuICBib3JkZXItYm90dG9tOiAycHggc29saWQgYmxhY2s7XG4gIHdpZHRoOiAzMDBweDtcbiAgcGFkZGluZzogMTBweCAwIDEwcHggMTBweDtcbn1cblxuLnNlYXJjaC1idG4ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIHotaW5kZXg6IDU7XG4gIGhlaWdodDogZml0LWNvbnRlbnQ7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLnNlYXJjaC1idG4gaW1nIHtcbiAgaGVpZ2h0OiAzNnB4O1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMjAwcHgpIHtcbiAgLmNvbnRlbnQtc2VjdGlvbl9fY29udGVudCB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoNCwgMWZyKTtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTBweCkge1xuICAuY29udGVudC1zZWN0aW9uX19jb250ZW50IHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgzLCAxZnIpO1xuICB9XG5cbiAgLmJhbm5lcl9faGVhZGluZyB7XG4gICAgZm9udC1zaXplOiAzNXB4O1xuICB9XG5cbiAgLnVzZXItaW5wdXQge1xuICAgIHdpZHRoOiAyNTBweDtcbiAgfVxuXG4gIC51c2VyLXN1Ym1pdCB7XG4gICAgd2lkdGg6IDE1MHB4O1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5oZWFkZXIge1xuICAgIGhlaWdodDogNzBweDtcbiAgfVxuXG4gIC5sb2dvIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG5cbiAgLm5hdl9fbGlzdCB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGhlaWdodDogMTAwdmg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgei1pbmRleDogMTAwO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNDMsIDQzLCA0NCwgMC41KTtcbiAgICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoOTZweCk7XG4gICAgdG9wOiAwcHg7XG4gICAgcmlnaHQ6IC0xMDAlO1xuICAgIHRyYW5zaXRpb246IDAuM3M7XG4gIH1cblxuICAubmF2X19saXN0IGxpOm5vdCg6bGFzdC1jaGlsZCkge1xuICAgIG1hcmdpbi1yaWdodDogMHB4O1xuICB9XG5cbiAgLm5hdl9fYnVyZ2VyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1MCU7XG4gICAgcmlnaHQ6IDIwcHg7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAgIHotaW5kZXg6IDIwMDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG4gIC5uYXZfX2xpbmsge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDIwMCU7XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzUwcHgpIHtcbiAgLmNvbnRlbnQtc2VjdGlvbl9fY29udGVudCB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMiwgMWZyKTtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1ODBweCkge1xuICAuYmFubmVyX19oZWFkaW5nIHtcbiAgICBmb250LXNpemU6IDMwcHg7XG4gIH1cblxuICAuYmFubmVyX19pbnB1dHMge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cblxuICAuYmFubmVyX19pbnB1dHMgPiAqIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuXG4gIC5iYW5uZXIgLnVzZXItaW5wdXQge1xuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDkwcHgpIHtcbiAgLmNvbnRlbnQtc2VjdGlvbl9fY29udGVudCB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMSwgMWZyKTtcbiAgfVxuXG4gIC5jb250ZW50LXNlY3Rpb25fX3NlYXJjaC1jaGFyYWN0ZXIsXG4gIC5zZWFyY2gge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XHJcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lKaWJHOWphM012Ym5Wc2JDNXpZM056SWl3aVlteHZZMnR6TDJOb1lYSmhZM1JsY2kxdGIyUmhiQzV6WTNOeklpd2lZbXh2WTJ0ekwyMXBlR2x1Y3k1elkzTnpJaXdpWW14dlkydHpMM1poY21saFlteGxjeTV6WTNOeklpd2lZbXh2WTJ0ekwyeHZZV1JsY2k1elkzTnpJaXdpYldGcGJpNXpZM056SWl3aVlteHZZMnR6TDJobFlXUmxjaTV6WTNOeklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJPMFZCUTBrN1JVRkRRVHRGUVVOQk96czdRVUZGU2p0RlFVTkpPenM3UVVGSFNqdEZRVU5KTzBWQlEwRTdSVUZEUVRzN1FVRkZRVHRGUVVOSk96czdRVUZIVWp0RlFVTkpPMFZCUTBFN1JVRkRRVHM3TzBGQlIwbzdSVUZEU1RzN08wRkRla0pLTzBWQlEwazdSVU5sUVN4UlJHUmpPMFZEWldRc1QwUm1iMEk3UlVGRGNFSTdSVUZEUVR0RlFVTkJPMFZCUlVFN1JVTk9RVHRGUVVOQkxHZENSRTF6UWp0RlEweDBRaXhoUkVzeVFqdEZRMG96UWl4cFFrUkpiVU03TzBGQlJXNURPMFZEVFVFc1VVUk1hMEk3UlVOTmJFSXNUMFJPZVVJN1JVRkRja0k3UlVGRFFUczdPMEZCU1ZJN1JVRkRTVHM3UVVGRFFUdEZRVU5KTzBWQlEwRTdSVUZEUVRzN1FVRkhTanRGUVVOSk8wVkJSVUU3UlVGRFFUdEZRVU5CTzBWQlEwRTdPMEZCUjBvN1JVRkRTVHRGUVVsQk96dEJRVWRLTzBWQlEwazdSVUZEUVR0RlFVTkJPenRCUVVkS08wVkJRMGs3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVVkJPenRCUVVsS08wVkJRMGs3UlVGRFFUdEZRelZFU2p0RlFVTkJMR2RDUkRaRU1FSTdSVU0xUkRGQ0xHRkVORVFyUWp0RlF6TkVMMElzYVVKRU1rUjFRenM3UVVGSGRrTTdSVU5zUkVFc1VVUnRSR3RDTzBWRGJFUnNRaXhQUkd0RWQwSTdSVUZEY0VJc1lVVndSVWs3UlVaeFJVbzdSVUZEUVR0RlFVTkJPenM3UVVGTFVqdEZRVU5KT3pzN1FVRkZTanRGUVVOSkxHdENSVFZGVVR0RlJqWkZVanM3TzBGQlJVbzdSVUZEU1RzN08wRkJTVUU3UlVGRFNUdEZRVU5CT3p0QlFVVkJPMFZCUTBrN096dEJRVXRhTzBWQlEwazdSVUZEUVR0RlFVTkJPMFZCUTBFN096dEJRVWRLTzBWQlEwazdSVUZEUVR0RlFVTkJPenM3UVVGSFNqdEZRVU5KTzBWQlEwRTdSVUZEUVRzN08wRkJSMG83UlVGRFNUczdPMEZIY2toS08wVkJRMGs3UlVGRFFUdEZRVU5CTzBWQlEwRTdPMEZCUTBrN1JVRkRTVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk96dEJRVVZCTzBWQlEwazdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUczdRVUZIU2p0RlFVTkpPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN096dEJRVTFvUWp0RlFVTkpPMGxCUTBrN08wVkJSVW83U1VGRFNUczdPMEZCUjFJN1JVRkRTVHRKUVVOSk96dEZRVVZLTzBsQlEwazdPenRCUTJoRVVqdEZRVU5KT3pzN1FVRkxTanRGUVVOSkxHRkdia0pST3pzN1FVVnhRbG83UlVGRFNUczdPMEZCUlVvN1JVRkRTVHRGUVVOQk8wVkJRMEU3T3p0QlFVZEtPMFZCUTBrN1JVRkRRVHRGUVVOQk96czdRVU5xUTBvN1JVRkRTU3hoU0VSUk8wVkhSVklzYTBKSVExRTdSVWRCVWp0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk96czdRVUZKU2p0RlFVTkpPenRCUVVOQk8wVkJRMGs3T3p0QlFVbFNPMFZCUTBrN08wRkJSVUU3UlVGRFNUdEZTbkpDU2p0RlFVTkJMR2RDU1hOQ01FSTdSVXB5UWpGQ0xHRkpjVUlyUWp0RlNuQkNMMElzYVVKSmIwSjFRenRGUVVWdVF6czdRVUZGUVR0RlFVTkpPenRCUVV0U08wVkJRMGtzWVVodVEwazdSVWR2UTBvN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUczdRVUZGUVR0RlFVTkpMRTlJZGtOQk96dEJSekpEVWp0RlFVTkpPenRCUVVWS08wVkJRMGs3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVRzN08wRkViRUpTTzBWSWNrSkpMRkZIYzBKak8wVklja0prTEU5SGNVSnhRanRGUVVWeVFqdEZRVU5CTzBWQlEwRTdSVUZEUVRzN1FVRkZRVHRGUVVOSk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZGUVRzN1FVRkhTanRGUVVOSk8wVkJRMEU3UlVGRFFUdEZRVU5CT3p0QlFVZEtPMFZJTjBSQk8wVkJRMEVzWjBKSE5rUXdRanRGU0RWRU1VSXNZVWMwUkN0Q08wVklNMFF2UWl4cFFrY3lSSFZET3pzN1FVRkxka003UlVod1JFRXNVVWR4Ukd0Q08wVkljRVJzUWl4UFIyOUVkMEk3UlVGRmNFSTdSVUZEUVR0RlFVTkJPMFZCUTBFN08wRkJSVUU3UlVGRFNUdEZRVU5CTEdGR09VVkJPMFZGSzBWQk8wVkJRMEU3TzBGQlIxSTdSVUZEU1R0RlFVTkJPMFZCUTBFN1JVaHlSa283UlVGRFFTeG5Ra2R6UmpCQ08wVklja1l4UWl4aFIzRkdLMEk3UlVod1JpOUNMR2xDUjI5R2RVTTdSVWg0UlhaRExGRkhNRVZyUWp0RlNIcEZiRUlzVDBkNVJYZENPMFZCUlhCQ08wVkJRMEU3UlVGRFFUczdPMEZCUzFJN1JVRkRTVHM3UVVGRlFUdEZRVU5KTzBWQlEwRXNUMFp5UjBrN1JVVnpSMG83UlVGRFFUczdRVUZIU2p0RlFVTkpPMFZJZEVkS08wVkJRMEVzZFVKSGMwY3dRanRGU0hKSE1VSXNiMEpIY1Vjd1F6dEZTSEJITVVNc1UwZHZSeXRETzBWSWJrY3ZReXhaUjIxSGNVUTdPMEZCUjNKRU8wVkliRWRCTEZGSGJVZHJRanRGU0d4SGJFSXNUMGRyUjNkQ08wVkJRM0JDTEZsR2FFaEpPMFZGYVVoS08wVkJRMEU3UlVGRFFUdEZRVU5CTzBWSWRraEtPMFZCUTBFc1owSkhkMGd3UWp0RlNIWklNVUlzWVVkMVNDdENPMFZJZEVndlFpeHBRa2R6U0hWRE8wVkJSVzVET3p0QlFVZEtPMFZCUTBrN1JVRkRRVHRGUVVOQk8wVklha2xLTzBWQlEwRXNaMEpIYTBrd1FqdEZTR3BKTVVJc1lVZHBTU3RDTzBWSWFFa3ZRaXhwUWtkblNYVkRPenM3UVVGTGRrTTdSVUZEU1N4clFrWjJTVWs3UlVWM1NVbzdSVUZEUVR0RlFVTkJPMFZCUlVFN1JVRkRRVHM3UVVGSFFUdEZRVU5KTzBWSWNFbFNMRkZIY1VselFqdEZTSEJKZEVJc1QwZHZTVFJDTzBWQlEzQkNMRmxHYkVwQk8wVkZiMHBCTzBWQlEwRTdSVUZEUVR0RlFVVkJPenRCUVVkS08wVkJRMGs3TzBGQlJVbzdSVUZEU1R0RlFVTkJPenRCUVVsU08wVkllRXBCTEZGSGVVcHJRanRGU0hoS2JFSXNUMGQzU25sQ08wVkJRM0pDT3p0QlFVTkJPMFZJZEVwS08wVkJRMEU3UlVGRFFUdEZSM05LVVRzN1FVRkpVanRGUVVOSk8wVkJRMEU3UlVGRlFUdEZRVU5CTzBWQlEwRTdSVUZEUVN4aFJuWk1UVHRGUlhkTVRqdEZRVVZCT3pzN1FVRkpVanRGUVVOSk8wVkJRMEU3UlVGRFFUczdRVUZGUVR0RlFVVkpPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUczdRVUZEUVR0RlFVTkpPenM3UVVGTFdqdEZRVU5KTzBsQlEwazdPenRCUVVsU08wVkJRMGs3U1VGRFNUczdPMFZCUjBFN1NVRkRTVHM3TzBWQlNVbzdTVUZEU1RzN1JVRkZTanRKUVVOSk96czdRVUZMV2p0RlFVTkpPMGxCUTBrN096dEZRVVZLTzBsQlEwazdPenRGUVVkQk8wbEJSVWs3U1Vod1VGSTdTVUZEUVN4blFrZHZVRGhDTzBsSWJsQTVRaXhoUjIxUWMwTTdTVWhzVUhSRExHbENSMnRRT0VNN1NVRkRkRU03U1VGRFFUdEpRVU5CTzBsQlEwRTdTVUZEUVR0SlFVTkJPMGxCUTBFN1NVRkZRVHM3UlVGRlFUdEpRVU5KT3p0RlFVZFNPMGxCUTBrN1NVRkRRVHRKUVVOQk8wbEJRMEU3U1VGRFFUdEpRVU5CT3p0RlFVZEtPMGxCUTBrN1NVRkRRVHRKUVVOQk96czdRVUZMV2p0RlFVTkpPMGxCUTBrN096dEJRVWxTTzBWQlJWRTdTVUZEU1RzN1JVRkZTanRKUVVOSk96dEZRVVZCTzBsQlEwazdPMFZCUjFJN1NVRkRTVHM3TzBGQlMxbzdSVUZEU1R0SlFVTkpPenM3UlVGRlNqdEpRVU5KSWl3aVptbHNaU0k2SW0xaGFXNHVZM056SWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaUtudGNjbHh1SUNBZ0lHMWhjbWRwYmpvZ01EdGNjbHh1SUNBZ0lIQmhaR1JwYm1jNklEQTdYSEpjYmlBZ0lDQmliM2d0YzJsNmFXNW5PaUJpYjNKa1pYSXRZbTk0TzF4eVhHNTlYSEpjYm5Wc0xDQnZiSHRjY2x4dUlDQWdJR3hwYzNRdGMzUjViR1U2SUc1dmJtVTdYSEpjYm4xY2NseHVYSEpjYm1sdWNIVjBlMXh5WEc0Z0lDQWdZbUZqYTJkeWIzVnVaRG9nZEhKaGJuTndZWEpsYm5RN1hISmNiaUFnSUNCaWIzSmtaWEk2SUc1dmJtVTdYSEpjYmlBZ0lDQm1iMjUwT2lCcGJtaGxjbWwwTzF4eVhHNWNjbHh1SUNBZ0lDWTZabTlqZFhON1hISmNiaUFnSUNBZ0lDQWdiM1YwYkdsdVpUb2dibTl1WlR0Y2NseHVJQ0FnSUgxY2NseHVmVnh5WEc1aWRYUjBiMjU3WEhKY2JpQWdJQ0JpWVdOclozSnZkVzVrT2lCMGNtRnVjM0JoY21WdWREdGNjbHh1SUNBZ0lHSnZjbVJsY2pvZ2JtOXVaVHRjY2x4dUlDQWdJR1p2Ym5RNklHbHVhR1Z5YVhRN1hISmNibjFjY2x4dVhISmNibUY3WEhKY2JpQWdJQ0IwWlhoMExXUmxZMjl5WVhScGIyNDZJRzV2Ym1VN1hISmNibjBpTENJdWJXOWtZV3dnZTF4eVhHNGdJQ0FnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nY21kaVlTZ3pNeXdnTXpNc0lETXpMQ0F3TGpZek9TazdYSEpjYmlBZ0lDQkFhVzVqYkhWa1pTQnphWHBsS0RFd01DVXNJREV3TUNVcE8xeHlYRzRnSUNBZ2NHOXphWFJwYjI0NklHWnBlR1ZrTzF4eVhHNGdJQ0FnZEc5d09pQXdPMXh5WEc0Z0lDQWdiR1ZtZERvZ01EdGNjbHh1WEhKY2JpQWdJQ0I2TFdsdVpHVjRPaUEzTzF4eVhHNGdJQ0FnUUdsdVkyeDFaR1VnWld4bGJXVnVkQzFtYkdWNEtISnZkeXdnWTJWdWRHVnlMQ0JqWlc1MFpYSXBPMXh5WEc1Y2NseHVJQ0FnSUNaZlgyTm9ZWEpoWTNSbGNsOWZhVzV1WlhJZ2UxeHlYRzRnSUNBZ0lDQWdJRUJwYm1Oc2RXUmxJSE5wZW1Vb05EQXdjSGdzSURjd01IQjRLVHRjY2x4dUlDQWdJQ0FnSUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCM2FHbDBaVHRjY2x4dUlDQWdJQ0FnSUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hISmNiaUFnSUNCOVhISmNibjFjY2x4dVhISmNiaTVqYUdGeVlXTjBaWElnZTF4eVhHNGdJQ0FnYUdWcFoyaDBPaUF4TURBbE8xeHlYRzRnSUNBZ0psOWZaR1YwWVdsc2N5QjdYSEpjYmlBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nWm14bGVEdGNjbHh1SUNBZ0lDQWdJQ0JuWVhBNklESXdjSGc3WEhKY2JpQWdJQ0FnSUNBZ2FHVnBaMmgwT2lBeE1EQWxPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNaZlgybHVabThnZTF4eVhHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jNklESXdjSGdnTXpCd2VDQXlNSEI0SURFMWNIZzdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHWnNaWGc3WEhKY2JpQWdJQ0FnSUNBZ1pteGxlQzFrYVhKbFkzUnBiMjQ2SUdOdmJIVnRianRjY2x4dUlDQWdJQ0FnSUNCb1pXbG5hSFE2SURFd01DVTdYSEpjYmlBZ0lDQWdJQ0FnZDJsa2RHZzZJRFl3SlR0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQW1YMTlwYldjZ2UxeHlYRzRnSUNBZ0lDQWdJRzFwYmkxM2FXUjBhRG9nTWpnMWNIZzdYSEpjYmlBZ0lDQWdJQ0FnTHk4Z2JXbHVMV2hsYVdkb2REb2dOREF3Y0hnN1hISmNiaUFnSUNBZ0lDQWdMeThnYUdWcFoyaDBPaUJtYVhRdFkyOXVkR1Z1ZER0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkMxamIyeHZjanB5WjJJb016QXNJREkxTENBeU5TbGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FtTFdsdFlXZGxJSHRjY2x4dUlDQWdJQ0FnSUNCM2FXUjBhRG9nTWpnMWNIZzdYSEpjYmlBZ0lDQWdJQ0FnYUdWcFoyaDBPaUEwTURCd2VEdGNjbHh1SUNBZ0lDQWdJQ0J2WW1wbFkzUXRabWwwT2lCamIzWmxjanRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNBbVgxOXVZVzFsSUh0Y2NseHVJQ0FnSUNBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nTmpBd08xeHlYRzRnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTWpCd2VEdGNjbHh1SUNBZ0lDQWdJQ0IwWlhoMExYUnlZVzV6Wm05eWJUb2dkWEJ3WlhKallYTmxPMXh5WEc0Z0lDQWdJQ0FnSUhSbGVIUXRZV3hwWjI0NklHTmxiblJsY2p0Y2NseHVJQ0FnSUNBZ0lDQnRZWGd0ZDJsa2RHZzZJRGt3SlR0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnYldGeVoybHVMV0p2ZEhSdmJUb2dNVEJ3ZUR0Y2NseHVJQ0FnSUNBZ0lDQXZMeUJ0WVhKbmFXNHRkRzl3T2lBeE1IQjRPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNaZlgySjFkSFJ2Ym5ON1hISmNiaUFnSUNBZ0lDQWdabXhsZURvZ01DQXdJR0YxZEc4N1hISmNiaUFnSUNBZ0lDQWdaMkZ3T2lBNGNIZzdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lFQnBibU5zZFdSbElHVnNaVzFsYm5RdFpteGxlQ2h5YjNjc0lHTmxiblJsY2l3Z2MzQmhZMlV0WW1WMGQyVmxiaWxjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNBbVgxOWlkWFIwYjI0Z2UxeHlYRzRnSUNBZ0lDQWdJRUJwYm1Oc2RXUmxJSE5wZW1Vb05UQndlQ3dnTVRVd2NIZ3BPMXh5WEc0Z0lDQWdJQ0FnSUdadmJuUXRabUZ0YVd4NU9pQWtabTl1ZEMxdFlXbHVPMXh5WEc0Z0lDQWdJQ0FnSUhSbGVIUXRkSEpoYm5ObWIzSnRPaUIxY0hCbGNtTmhjMlU3WEhKY2JpQWdJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQXhNbkI0TzF4eVhHNGdJQ0FnSUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUEyTURBN1hISmNibHh5WEc0Z0lDQWdmVnh5WEc1OVhISmNibHh5WEc0dWRtbGxkeTFqYjIxcFkzTWdlMXh5WEc0Z0lDQWdZbTl5WkdWeU9pQXhMalZ3ZUNCemIyeHBaQ0FrYUdWaFpHVnlMV0puTzF4eVhHNTlYSEpjYmk1aFpHUWdlMXh5WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dKSEpsWkMxamIyeHZjanRjY2x4dUlDQWdJR052Ykc5eU9pQjNhR2wwWlR0Y2NseHVmVnh5WEc0dWFXNW1iMTlmYVc1dVpYSWdlMXh5WEc0Z0lDQWdabXhsZURvZ01TQXdJR0YxZEc4N1hISmNibjFjY2x4dVhISmNiaTVqYjIxcFkzTWdlMXh5WEc0Z0lDQWdKbDlmYkdsdWF5QjdYSEpjYmlBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBeE0zQjRPMXh5WEc0Z0lDQWdJQ0FnSUdOdmJHOXlPaUJwYm1obGNtbDBPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQW1PbWh2ZG1WeUlIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1ptOXVkQzEzWldsbmFIUTZJRFV3TUR0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlYSEpjYm4xY2NseHVYSEpjYmk1amJHOXpaU0I3WEhKY2JpQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEhKY2JpQWdJQ0J5YVdkb2REb2dNVEJ3ZUR0Y2NseHVJQ0FnSUhSdmNEb2dNVEJ3ZUR0Y2NseHVJQ0FnSUdOMWNuTnZjam9nY0c5cGJuUmxjanRjY2x4dWZWeHlYRzVjY2x4dUxtaGxZV1FnZTF4eVhHNGdJQ0FnWm05dWRDMTNaV2xuYUhRNklEWXdNRHRjY2x4dUlDQWdJR1p2Ym5RdGMybDZaVG9nTVRSd2VEdGNjbHh1SUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SURFd2NIZzdYSEpjYm4xY2NseHVYSEpjYmk1a1pYTmpjbWx3ZEdsdmJpMTBaWGgwSUh0Y2NseHVJQ0FnSUdadmJuUXRjMmw2WlRvZ01UTndlRHRjY2x4dUlDQWdJRzFoY21kcGJpMWliM1IwYjIwNklERTFjSGc3WEhKY2JpQWdJQ0JqYjJ4dmNqb2dJell3TlVVMVJUdGNjbHh1ZlZ4eVhHNWNjbHh1TG1OdmJXbGpjMTlmYkdsemRDQjdYSEpjYmlBZ0lDQmpiMnh2Y2pvZ0l6WXdOVVUxUlR0Y2NseHVmU0lzSWtCdGFYaHBiaUJsYkdWdFpXNTBMV1pzWlhnb0pHUnBjbVZqZEdsdmJpd2dKR0ZzYVdkdUxDQWthblZ6ZEdsbWVTbDdYSEpjYmlBZ0lDQmthWE53YkdGNU9pQm1iR1Y0TzF4eVhHNGdJQ0FnWm14bGVDMWthWEpsWTNScGIyNDZJQ1JrYVhKbFkzUnBiMjQ3WEhKY2JpQWdJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ0pHRnNhV2R1TzF4eVhHNGdJQ0FnYW5WemRHbG1lUzFqYjI1MFpXNTBPaUFrYW5WemRHbG1lVHRjY2x4dWZWeHlYRzVjY2x4dVFHMXBlR2x1SUdWc1pXMWxiblF0WjNKcFpDZ2taM1JqYjJ4MWJXNXpMQ0FrWjNSeWIzZHpMQ0FrY21kaGNDd2dKR05uWVhBcGUxeHlYRzRnSUNBZ1pHbHpjR3hoZVRvZ1ozSnBaRHRjY2x4dUlDQWdJR2R5YVdRdGRHVnRjR3hoZEdVdFkyOXNkVzF1Y3pvZ0pHZDBZMjlzZFcxdWN6dGNjbHh1SUNBZ0lHZHlhV1F0ZEdWdGNHeGhkR1V0Y205M2N6b2dKR2QwY205M2N6dGNjbHh1SUNBZ0lISnZkeTFuWVhBNklDUnlaMkZ3TzF4eVhHNGdJQ0FnWTI5c2RXMXVMV2RoY0RvZ0pHTm5ZWEE3WEhKY2JuMWNjbHh1WEhKY2JrQnRhWGhwYmlCemFYcGxLQ1JvWldsbmFIUXNJQ1IzYVdSMGFDbDdYSEpjYmlBZ0lDQm9aV2xuYUhRNklDUm9aV2xuYUhRN1hISmNiaUFnSUNCM2FXUjBhRG9nSkhkcFpIUm9PMXh5WEc1OVhISmNibHh5WEc1QWJXbDRhVzRnYVcxaFoyVjdYSEpjYmlBZ0lDQm9aV2xuYUhRNklERXdNQ1U3WEhKY2JpQWdJQ0IzYVdSMGFEb2dNVEF3SlR0Y2NseHVJQ0FnSUc5aWFtVmpkQzFtYVhRNklHTnZkbVZ5TzF4eVhHNTlYSEpjYmlJc0lpUm1iMjUwTFcxaGFXNDZJQ2RGZUc4bkxDQnpZVzV6TFhObGNtbG1PeUJjY2x4dUpITmxZMjl1WkMxbWIyNTBPaUFuVW05aWIzUnZKeXdnYzJGdWN5MXpaWEpwWmp0Y2NseHVKR2x1Y0hWMExYUmxlSFE2SUNNME5qUTFORFU3WEhKY2JpUm9aV0ZrWlhJdFltYzZJQ015TXpJek1qTTdYSEpjYmlSeVpXUXRZMjlzYjNJNklDTkZSREZFTWpRN1hISmNibHh5WEc0aUxDSmNjbHh1TG14dllXUmxjaUI3WEhKY2JpQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEhKY2JpQWdJQ0IwYjNBNklEVXdKVHRjY2x4dUlDQWdJR3hsWm5RNklEVXdKVHRjY2x4dUlDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsS0MwMU1DVXNJQzAxTUNVcE8xeHlYRzRnSUNBZ0lDQWdJQ1pmWDJsdWJtVnlJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF4TUhCNE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCdFlYSm5hVzQ2SURVd2NIZ2dZWFYwYnp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdWNGRDMXBibVJsYm5RNklDMDVPVGs1WlcwN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUF4TVdWdE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCb1pXbG5hSFE2SURFeFpXMDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHSnZjbVJsY2kxeVlXUnBkWE02SURVd0pUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpEb2dJelk1TmprMk9UdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpEb2diR2x1WldGeUxXZHlZV1JwWlc1MEtIUnZJSEpwWjJoMExDQWpOamsyT1RZNUlERXdKU3dnY21kaVlTZ3hNRFVzTVRBMUxERXdOU3dnTUNrZ05ESWxLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmhibWx0WVhScGIyNDZJR3h2WVdReklERXVOSE1nYVc1bWFXNXBkR1VnYkdsdVpXRnlPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaVm9vTUNrN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQW1PbUpsWm05eVpTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dOVEFsTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FHVnBaMmgwT2lBMU1DVTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrT2lBak5qazJPVFk1TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTVRBd0pTQXdJREFnTUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJ2Y0RvZ01EdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsWm5RNklEQTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1MFpXNTBPaUFuSnp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0pqcGhablJsY2lCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtPaUFqWm1abVptWm1PMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZJRGMxSlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHaGxhV2RvZERvZ056VWxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW05eVpHVnlMWEpoWkdsMWN6b2dOVEFsTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVkR1Z1ZERvZ0p5YzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0WVhKbmFXNDZJR0YxZEc4N1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYjNBNklEQTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWldaME9pQXdPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW05MGRHOXRPaUF3TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtbG5hSFE2SURBN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzU5WEhKY2JseHlYRzVBTFhkbFltdHBkQzFyWlhsbWNtRnRaWE1nYkc5aFpETWdlMXh5WEc0Z0lDQWdNQ1VnZTF4eVhHNGdJQ0FnSUNBZ0lIUnlZVzV6Wm05eWJUb2djbTkwWVhSbEtEQmtaV2NwTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnTVRBd0pTQjdYSEpjYmlBZ0lDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCeWIzUmhkR1VvTXpZd1pHVm5LVHRjY2x4dUlDQWdJSDFjY2x4dWZWeHlYRzVBYTJWNVpuSmhiV1Z6SUd4dllXUXpJSHRjY2x4dUlDQWdJREFsSUh0Y2NseHVJQ0FnSUNBZ0lDQjBjbUZ1YzJadmNtMDZJSEp2ZEdGMFpTZ3daR1ZuS1R0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSURFd01DVWdlMXh5WEc0Z0lDQWdJQ0FnSUhSeVlXNXpabTl5YlRvZ2NtOTBZWFJsS0RNMk1HUmxaeWs3WEhKY2JpQWdJQ0I5WEhKY2JuMGlMQ0pjY2x4dUx5OGdRR2x0Y0c5eWRDQmNJbUpzYjJOcmN5OW9aV0ZrYVc1bmN5NXpZM056WENJN1hISmNibHh5WEc0dkx5QXZMMmx0Y0c5eWRDQmhiR3dnWm5KdmJTQmliRzlqYTNNZ1ptOXNaR1Z5WEhKY2JpOHZJRUJwYlhCdmNuUWdYQ0ppYkc5amEzTXZLaTV6WTNOelhDSTdYSEpjYmx4eVhHNUFhVzF3YjNKMElGd2lZbXh2WTJ0ekwyNTFiR3d1YzJOemMxd2lPMXh5WEc1QWFXMXdiM0owSUZ3aVlteHZZMnR6TDNaaGNtbGhZbXhsY3k1elkzTnpYQ0k3WEhKY2JrQnBiWEJ2Y25RZ1hDSmliRzlqYTNNdmJXbDRhVzV6TG5OamMzTmNJanRjY2x4dVFHbHRjRzl5ZENCY0ltSnNiMk5yY3k5amFHRnlZV04wWlhJdGJXOWtZV3d1YzJOemMxd2lPMXh5WEc1QWFXMXdiM0owSUZ3aVlteHZZMnR6TDJ4dllXUmxjaTV6WTNOelhDSTdYSEpjYmx4eVhHNHVhR2xrWlh0Y2NseHVJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVTdYSEpjYmlBZ0lDQXZMeUJ2Y0dGamFYUjVPaUF3TzF4eVhHNTlYSEpjYmx4eVhHNWNjbHh1WW05a2VYdGNjbHh1SUNBZ0lHWnZiblF0Wm1GdGFXeDVPaUFrWm05dWRDMXRZV2x1TzF4eVhHNTlYSEpjYmk1M2NtRndjR1Z5ZTF4eVhHNGdJQ0FnZDJsa2RHZzZJREV3TUNVN1hISmNibjFjY2x4dUkyMWhhVzU3WEhKY2JpQWdJQ0JvWldsbmFIUTZJREV3TUhab08xeHlYRzRnSUNBZ2IzWmxjbVpzYjNjNklHaHBaR1JsYmp0Y2NseHVJQ0FnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2NseHVmVnh5WEc1Y2NseHVMbDlqYjI1MFlXbHVaWEo3WEhKY2JpQWdJQ0J0WVhndGQybGtkR2c2SURFeU1EQndlRHRjY2x4dUlDQWdJRzFoY21kcGJqb2dNQ0JoZFhSdk8xeHlYRzRnSUNBZ2NHRmtaR2x1WnpvZ01DQXhOWEI0TzF4eVhHNTlYSEpjYmtCcGJYQnZjblFnWENKaWJHOWphM012YUdWaFpHVnlMbk5qYzNOY0lqdGNjbHh1WEhKY2JpNWlZVzV1WlhKN1hISmNiaUFnSUNCQWFXNWpiSFZrWlNCemFYcGxLRFV3TUhCNExDQXhNREFsS1R0Y2NseHVJQ0FnSUZ4eVhHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ2RYSnNLQzlwYldjdlltRnVibVZ5TG1wd1p5a2dPMXh5WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzF6YVhwbE9pQmpiM1psY2p0Y2NseHVJQ0FnSUdKaFkydG5jbTkxYm1RdGNtVndaV0YwT2lCdWJ5MXlaWEJsWVhRN1hISmNiaUFnSUNCaVlXTnJaM0p2ZFc1a0xXRjBkR0ZqYUcxbGJuUTZJR1pwZUdWa08xeHlYRzVjY2x4dUlDQWdJQ1pmWDJsdWJtVnllMXh5WEc0Z0lDQWdJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2NseHVJQ0FnSUNBZ0lDQjBiM0E2SURVd0pUdGNjbHh1SUNBZ0lDQWdJQ0JzWldaME9pQTFNQ1U3WEhKY2JpQWdJQ0FnSUNBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVW9MVFV3SlN3Z0xUVXdKU2s3WEhKY2JpQWdJQ0FnSUNBZ1kyOXNiM0k2SUhkb2FYUmxPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQjNhV1IwYURvZ09UQWxPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNaZlgyaGxZV1JwYm1kN1hISmNiaUFnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUEwTlhCNE8xeHlYRzRnSUNBZ0lDQWdJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjanRjY2x4dUlDQWdJQ0FnSUNCMFpYaDBMWFJ5WVc1elptOXliVG9nZFhCd1pYSmpZWE5sTzF4eVhHNGdJQ0FnSUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SURJd2NIZzdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnSmw5ZmFXNXdkWFJ6ZTF4eVhHNGdJQ0FnSUNBZ0lFQnBibU5zZFdSbElHVnNaVzFsYm5RdFpteGxlQ2h5YjNjc0lHTmxiblJsY2l3Z1kyVnVkR1Z5S1R0Y2NseHVJQ0FnSUgxY2NseHVmVnh5WEc1Y2NseHVMblZ6WlhKN1hISmNiaUFnSUNBbUxXbHVjSFYwZTF4eVhHNGdJQ0FnSUNBZ0lFQnBibU5zZFdSbElITnBlbVVvTkRCd2VDd2dNekF3Y0hncE8xeHlYRzRnSUNBZ0lDQWdJRnh5WEc0Z0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklIZG9hWFJsTzF4eVhHNGdJQ0FnSUNBZ0lHWnZiblF0YzJsNlpUb2dNVFJ3ZUR0Y2NseHVJQ0FnSUNBZ0lDQndZV1JrYVc1bk9pQXhNSEI0TzF4eVhHNGdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphenRjY2x4dVhISmNiaUFnSUNBZ0lDQWdKam82Y0d4aFkyVm9iMnhrWlhKN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSbGVIUXRkSEpoYm5ObWIzSnRPaUIxY0hCbGNtTmhjMlU3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR1p2Ym5RdFptRnRhV3g1T2lBa1ptOXVkQzF0WVdsdU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNklERTBjSGc3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eU9pQWpORFkwTlRRMU8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dUlDQWdJQ1l0YzNWaWJXbDBlMXh5WEc0Z0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amF6dGNjbHh1SUNBZ0lDQWdJQ0JqYjJ4dmNqb2dkMmhwZEdVN1hISmNiaUFnSUNBZ0lDQWdkR1Y0ZEMxMGNtRnVjMlp2Y20wNklIVndjR1Z5WTJGelpUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ1FHbHVZMngxWkdVZ1pXeGxiV1Z1ZEMxbWJHVjRLSEp2ZHl3Z1kyVnVkR1Z5TENCalpXNTBaWElwTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0J6YVhwbEtEUXdjSGdzSURFNE1IQjRLVHRjY2x4dUlDQWdJQ0FnSUNCY2NseHVJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREUwY0hnN1hISmNiaUFnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nSTBWRU1VUXlORHRjY2x4dUlDQWdJQ0FnSUNCd1lXUmthVzVuT2lBeE1IQjRPMXh5WEc0Z0lDQWdmVnh5WEc1OVhISmNibHh5WEc1Y2NseHVMbU52Ym5SbGJuUXRjMlZqZEdsdmJudGNjbHh1SUNBZ0lIQmhaR1JwYm1jNklETXdjSGdnTUR0Y2NseHVYSEpjYmlBZ0lDQW1YMTlvWldGa2FXNW5lMXh5WEc0Z0lDQWdJQ0FnSUhSbGVIUXRkSEpoYm5ObWIzSnRPaUIxY0hCbGNtTmhjMlU3WEhKY2JpQWdJQ0FnSUNBZ1kyOXNiM0k2SUNSb1pXRmtaWEl0WW1jN1hISmNiaUFnSUNBZ0lDQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh5WEc0Z0lDQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ01qVndlRHRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNBbVgxOWpiMjUwWlc1MGUxeHlYRzRnSUNBZ0lDQWdJRzFoZUMxM2FXUjBhRG9nTVRBd0pUdGNjbHh1SUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0JsYkdWdFpXNTBMV2R5YVdRb2NtVndaV0YwS0RVc0lERm1jaWtzSURGbWNpd2dNakJ3ZUN3Z01qQndlQ2s3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0psOWZZblYwZEc5dWUxeHlYRzRnSUNBZ0lDQWdJRUJwYm1Oc2RXUmxJSE5wZW1Vb05UQndlQ3dnTWpBd2NIZ3BPMXh5WEc0Z0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklDUnlaV1F0WTI5c2IzSTdYSEpjYmlBZ0lDQWdJQ0FnWTI5c2IzSTZJSGRvYVhSbE8xeHlYRzRnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTVRSd2VEdGNjbHh1SUNBZ0lDQWdJQ0IwWlhoMExYUnlZVzV6Wm05eWJUb2dkWEJ3WlhKallYTmxPMXh5WEc0Z0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQkFhVzVqYkhWa1pTQmxiR1Z0Wlc1MExXWnNaWGdvY205M0xDQmpaVzUwWlhJc0lHTmxiblJsY2lrN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUcxaGNtZHBiam9nTVRCd2VDQmhkWFJ2TzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDWmZYM05sWVhKamFDMWphR0Z5WVdOMFpYSjdYSEpjYmlBZ0lDQWdJQ0FnZDJsa2RHZzZJR1pwZEMxamIyNTBaVzUwTzF4eVhHNGdJQ0FnSUNBZ0lHMWhjbWRwYmpvZ01qQndlQ0F3TzF4eVhHNGdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ1FHbHVZMngxWkdVZ1pXeGxiV1Z1ZEMxbWJHVjRLSEp2ZHl3Z1kyVnVkR1Z5TENCbWJHVjRMWE4wWVhKMEtUdGNjbHh1SUNBZ0lIMWNjbHh1ZlZ4eVhHNWNjbHh1TG1obGNtOGdlMXh5WEc0Z0lDQWdKbDlmWW14dlkydDdYSEpjYmlBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSkdobFlXUmxjaTFpWnp0Y2NseHVJQ0FnSUNBZ0lDQnRhVzR0ZDJsa2RHZzZJREl4T0hCNE8xeHlYRzRnSUNBZ0lDQWdJR2hsYVdkb2REb2dNelV3Y0hnN1hISmNiaUFnSUNBZ0lDQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQmpkWEp6YjNJNklIQnZhVzUwWlhJN1hISmNiaUFnSUNBZ0lDQWdiM1psY21ac2IzYzZJR2hwWkdSbGJqdGNjbHh1SUNBZ0lDQWdJQ0JjY2x4dVhISmNiaUFnSUNBZ0lDQWdKanBoWm5SbGNudGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVkR1Z1ZERvZ0p5YzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lFQnBibU5zZFdSbElITnBlbVVvTVRCd2VDd2dNVEF3SlNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklDUnlaV1F0WTI5c2IzSTdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR0p2ZEhSdmJUb2dNRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdlaTFwYm1SbGVEb2dNRHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSeVlXNXphWFJwYjI0NklDNHpjenRjY2x4dUlDQWdJQ0FnSUNCOVhISmNibHh5WEc0Z0lDQWdJQ0FnSUNZNmFHOTJaWEk2WVdaMFpYSjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHaGxhV2RvZERvZ09UQndlRHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdKanBvYjNabGNpQnBiV2NnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwY21GdWMybDBhVzl1T2lBdU0zTTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUnlZVzV6Wm05eWJUb2djMk5oYkdVb01TNHlLVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdKaTFwYldGblpTQjdYSEpjYmlBZ0lDQWdJQ0FnUUdsdVkyeDFaR1VnYzJsNlpTZ3lOakJ3ZUN3Z01UQXdKU2s3WEhKY2JpQWdJQ0FnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTWpCd2VEdGNjbHh1SUNBZ0lDQWdJQ0FtSUdsdFozdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1FHbHVZMngxWkdVZ2FXMWhaMlU3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJ5WVc1emFYUnBiMjQ2SUM0emN6dGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0psOWZaR1Z6WTN0Y2NseHVJQ0FnSUNBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYSEpjYmlBZ0lDQWdJQ0FnZWkxcGJtUmxlRG9nTXp0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnZEdWNGRDMTBjbUZ1YzJadmNtMDZJSFZ3Y0dWeVkyRnpaVHRjY2x4dUlDQWdJQ0FnSUNCamIyeHZjam9nZDJocGRHVTdYSEpjYmlBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBeE9IQjRPMXh5WEc0Z0lDQWdJQ0FnSUdadmJuUXRabUZ0YVd4NU9pQWtjMlZqYjI1a0xXWnZiblE3WEhKY2JpQWdJQ0FnSUNBZ1ptOXVkQzEzWldsbmFIUTZJRFV3TUR0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnYldGeVoybHVMV3hsWm5RNklERXdjSGc3WEhKY2JpQWdJQ0I5WEhKY2JuMWNjbHh1WEhKY2JpNXpaV0Z5WTJoN1hISmNiaUFnSUNCaWIzSmtaWEl0WW05MGRHOXRPaUF5Y0hnZ2MyOXNhV1FnWW14aFkyczdYSEpjYmlBZ0lDQjNhV1IwYURvZ016QXdjSGc3WEhKY2JpQWdJQ0J3WVdSa2FXNW5PaUF4TUhCNElEQWdNVEJ3ZUNBeE1IQjRPMXh5WEc0Z0lDQWdYSEpjYmlBZ0lDQW1MV0owYm50Y2NseHVJQ0FnSUNBZ0lDQXZMeUJpYjNKa1pYSXRZbTkwZEc5dE9pQXljSGdnYzI5c2FXUWdZbXhoWTJzN1hISmNiaUFnSUNBZ0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh5WEc0Z0lDQWdJQ0FnSUhSdmNEb2dNRHRjY2x4dUlDQWdJQ0FnSUNCeWFXZG9kRG9nTUR0Y2NseHVJQ0FnSUNBZ0lDQjZMV2x1WkdWNE9pQTFPMXh5WEc0Z0lDQWdJQ0FnSUdobGFXZG9kRG9nWm1sMExXTnZiblJsYm5RN1hISmNiaUFnSUNBZ0lDQWdZM1Z5YzI5eU9pQndiMmx1ZEdWeU8xeHlYRzRnSUNBZ0lDQWdJQ1lnYVcxbklIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FHVnBaMmgwT2lBek5uQjRPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVmVnh5WEc1Y2NseHVRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFoZUMxM2FXUjBhRG9nTVRJd01IQjRLWHRjY2x4dUlDQWdJQzVqYjI1MFpXNTBMWE5sWTNScGIyNWZYMk52Ym5SbGJuUjdYSEpjYmlBZ0lDQWdJQ0FnWjNKcFpDMTBaVzF3YkdGMFpTMWpiMngxYlc1ek9pQnlaWEJsWVhRb05Dd2dNV1p5S1R0Y2NseHVJQ0FnSUgxY2NseHVmVnh5WEc1Y2NseHVRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFoZUMxM2FXUjBhRG9nT1Rrd2NIZ3BlMXh5WEc0Z0lDQWdMbU52Ym5SbGJuUXRjMlZqZEdsdmJsOWZZMjl1ZEdWdWRIdGNjbHh1SUNBZ0lDQWdJQ0JuY21sa0xYUmxiWEJzWVhSbExXTnZiSFZ0Ym5NNklISmxjR1ZoZENnekxDQXhabklwTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnTG1KaGJtNWxjaUI3WEhKY2JpQWdJQ0FnSUNBZ0psOWZhR1ZoWkdsdVozdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQXpOWEI0TzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lDNTFjMlZ5ZTF4eVhHNGdJQ0FnSUNBZ0lDWXRhVzV3ZFhSN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUF5TlRCd2VEdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0ppMXpkV0p0YVhSN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUF4TlRCd2VEdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JuMWNjbHh1WEhKY2JrQnRaV1JwWVNCelkzSmxaVzRnWVc1a0lDaHRZWGd0ZDJsa2RHZzZJRGMyT0hCNEtYdGNjbHh1SUNBZ0lDNW9aV0ZrWlhKN1hISmNiaUFnSUNBZ0lDQWdhR1ZwWjJoME9pQTNNSEI0TzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnTG14dloyOTdYSEpjYmlBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nYm05dVpUdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lDNXVZWFo3WEhKY2JpQWdJQ0FnSUNBZ0psOWZiR2x6ZEh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnTHk4Z2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCd2IzTnBkR2x2YmpvZ1ptbDRaV1E3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRUJwYm1Oc2RXUmxJR1ZzWlcxbGJuUXRabXhsZUNoamIyeDFiVzRzSUdObGJuUmxjaXdnWTJWdWRHVnlLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhR1ZwWjJoME9pQXhNREIyYUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZJREV3TUNVN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhvdGFXNWtaWGc2SURFd01EdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0lISm5ZbUVvTkRNc0lEUXpMQ0EwTkN3Z01DNDFLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZbUZqYTJSeWIzQXRabWxzZEdWeU9pQmliSFZ5S0RrMmNIZ3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBiM0E2SURCd2VEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NtbG5hSFE2SUMweE1EQWxPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEhKaGJuTnBkR2x2YmpvZ0xqTnpPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0ppQnNhVHB1YjNRb09teGhjM1F0WTJocGJHUXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYldGeVoybHVMWEpwWjJoME9pQXdjSGc3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdKbDlmWW5WeVoyVnllMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUnZjRG9nTlRBbE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCeWFXZG9kRG9nTWpCd2VEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVlpLQzAxTUNVcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCNkxXbHVaR1Y0T2lBeU1EQTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0F2THlCMGNtRnVjMmwwYVc5dU9pQXVNM05jY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdKbDlmYkdsdWEzdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNklESXdjSGc3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR3hwYm1VdGFHVnBaMmgwT2lBeU1EQWxPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVmVnh5WEc1Y2NseHVRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFoZUMxM2FXUjBhRG9nTnpVd2NIZ3BlMXh5WEc0Z0lDQWdMbU52Ym5SbGJuUXRjMlZqZEdsdmJsOWZZMjl1ZEdWdWRIdGNjbHh1SUNBZ0lDQWdJQ0JuY21sa0xYUmxiWEJzWVhSbExXTnZiSFZ0Ym5NNklISmxjR1ZoZENneUxDQXhabklwTzF4eVhHNGdJQ0FnZlZ4eVhHNTlYSEpjYmx4eVhHNUFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV0Y0TFhkcFpIUm9PaUExT0RCd2VDbDdYSEpjYmlBZ0lDQXVZbUZ1Ym1WeUlIdGNjbHh1SUNBZ0lDQWdJQ0FtWDE5b1pXRmthVzVuSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBek1IQjRPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQW1YMTlwYm5CMWRITWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iR1Y0TFdScGNtVmpkR2x2YmpvZ1kyOXNkVzF1TzF4eVhHNGdJQ0FnWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ1lnUGlvZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdnNklERXdNQ1U3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdMblZ6WlhJdGFXNXdkWFFnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXhOWEI0TzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lGeHlYRzU5WEhKY2JrQnRaV1JwWVNCelkzSmxaVzRnWVc1a0lDaHRZWGd0ZDJsa2RHZzZJRFE1TUhCNEtYdGNjbHh1SUNBZ0lDNWpiMjUwWlc1MExYTmxZM1JwYjI1ZlgyTnZiblJsYm5SN1hISmNiaUFnSUNBZ0lDQWdaM0pwWkMxMFpXMXdiR0YwWlMxamIyeDFiVzV6T2lCeVpYQmxZWFFvTVN3Z01XWnlLVHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJQzVqYjI1MFpXNTBMWE5sWTNScGIyNWZYM05sWVhKamFDMWphR0Z5WVdOMFpYSXNJQzV6WldGeVkyaDdYSEpjYmlBZ0lDQWdJQ0FnZDJsa2RHZzZJREV3TUNVN1hISmNiaUFnSUNCOVhISmNibjBpTENJdWFHVmhaR1Z5ZTF4eVhHNGdJQ0FnWm05dWRDMW1ZVzFwYkhrNklDUm1iMjUwTFcxaGFXNDdYSEpjYmlBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWthR1ZoWkdWeUxXSm5PMXh5WEc0Z0lDQWdkMmxrZEdnNklERXdNQ1U3WEhKY2JpQWdJQ0JvWldsbmFIUTZJRGt3Y0hnN1hISmNiaUFnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hISmNiaUFnSUNCMGIzQTZJREE3WEhKY2JpQWdJQ0JzWldaME9pQXdPMXh5WEc0Z0lDQWdMeTl3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEhKY2JuMWNjbHh1WEhKY2JpNXNiMmR2ZTF4eVhHNGdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYSEpjYmlBZ0lDQnBiV2Q3WEhKY2JpQWdJQ0FnSUNBZ2FHVnBaMmgwT2lBMU1IQjRPMXh5WEc0Z0lDQWdmVnh5WEc1OVhISmNibHh5WEc0dWJtRjJlMXh5WEc0Z0lDQWdhR1ZwWjJoME9pQXhNREFsTzF4eVhHNWNjbHh1SUNBZ0lDWmZYMnhwYzNSN1hISmNiaUFnSUNBZ0lDQWdhR1ZwWjJoME9pQXhNREFsTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0JsYkdWdFpXNTBMV1pzWlhnb2NtOTNMQ0JqWlc1MFpYSXNJR05sYm5SbGNpazdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jNklERXdjSGdnTWpCd2VEdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0ppQnNhVHB1YjNRb09teGhjM1F0WTJocGJHUXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnRZWEpuYVc0dGNtbG5hSFE2SURNd2NIZzdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FtWDE5c2FXNXJlMXh5WEc0Z0lDQWdJQ0FnSUdadmJuUXRabUZ0YVd4NU9pQWtabTl1ZEMxdFlXbHVPMXh5WEc0Z0lDQWdJQ0FnSUdOdmJHOXlPaUIzYUdsMFpUdGNjbHh1SUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2SURFMGNIZzdYSEpjYmlBZ0lDQWdJQ0FnZEdWNGRDMTBjbUZ1YzJadmNtMDZJSFZ3Y0dWeVkyRnpaVHRjY2x4dUlDQWdJQ0FnSUNCbWIyNTBMWGRsYVdkb2REb2dOVEF3TzF4eVhHNGdJQ0FnSUNBZ0lIUnlZVzV6YVhScGIyNDZJQzR6Y3p0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnSmpwb2IzWmxjbnRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZMjlzYjNJNklDUnlaV1F0WTI5c2IzSTdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDWmZYMkoxY21kbGNudGNjbHh1SUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJ1YjI1bE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ0psOWZZMnh2YzJWN1hISmNiaUFnSUNBZ0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh5WEc0Z0lDQWdJQ0FnSUhSdmNEb2dOVEFsTzF4eVhHNGdJQ0FnSUNBZ0lISnBaMmgwT2lBeU1IQjRPMXh5WEc0Z0lDQWdJQ0FnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbFdTZ3ROVEFsS1R0Y2NseHVJQ0FnSUNBZ0lDQjZMV2x1WkdWNE9pQXlNREE3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzU5WEhKY2JseHlYRzRpWFgwPSAqLyIsIlxyXG4vLyBAaW1wb3J0IFwiYmxvY2tzL2hlYWRpbmdzLnNjc3NcIjtcclxuXHJcbi8vIC8vaW1wb3J0IGFsbCBmcm9tIGJsb2NrcyBmb2xkZXJcclxuLy8gQGltcG9ydCBcImJsb2Nrcy8qLnNjc3NcIjtcclxuXHJcbkBpbXBvcnQgXCJibG9ja3MvbnVsbC5zY3NzXCI7XHJcbkBpbXBvcnQgXCJibG9ja3MvdmFyaWFibGVzLnNjc3NcIjtcclxuQGltcG9ydCBcImJsb2Nrcy9taXhpbnMuc2Nzc1wiO1xyXG5AaW1wb3J0IFwiYmxvY2tzL2NoYXJhY3Rlci1tb2RhbC5zY3NzXCI7XHJcbkBpbXBvcnQgXCJibG9ja3MvbG9hZGVyLnNjc3NcIjtcclxuXHJcbi5oaWRle1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICAgIC8vIG9wYWNpdHk6IDA7XHJcbn1cclxuXHJcblxyXG5ib2R5e1xyXG4gICAgZm9udC1mYW1pbHk6ICRmb250LW1haW47XHJcbn1cclxuLndyYXBwZXJ7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG4jbWFpbntcclxuICAgIGhlaWdodDogMTAwdmg7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcblxyXG4uX2NvbnRhaW5lcntcclxuICAgIG1heC13aWR0aDogMTIwMHB4O1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICBwYWRkaW5nOiAwIDE1cHg7XHJcbn1cclxuQGltcG9ydCBcImJsb2Nrcy9oZWFkZXIuc2Nzc1wiO1xyXG5cclxuLmJhbm5lcntcclxuICAgIEBpbmNsdWRlIHNpemUoNTAwcHgsIDEwMCUpO1xyXG4gICAgXHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoL2ltZy9iYW5uZXIuanBnKSA7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgIGJhY2tncm91bmQtYXR0YWNobWVudDogZml4ZWQ7XHJcblxyXG4gICAgJl9faW5uZXJ7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgIGxlZnQ6IDUwJTtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICAgICAgICBjb2xvcjogd2hpdGU7XHJcblxyXG4gICAgICAgIHdpZHRoOiA5MCU7XHJcbiAgICB9XHJcblxyXG4gICAgJl9faGVhZGluZ3tcclxuICAgICAgICBmb250LXNpemU6IDQ1cHg7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgIH1cclxuXHJcbiAgICAmX19pbnB1dHN7XHJcbiAgICAgICAgQGluY2x1ZGUgZWxlbWVudC1mbGV4KHJvdywgY2VudGVyLCBjZW50ZXIpO1xyXG4gICAgfVxyXG59XHJcblxyXG4udXNlcntcclxuICAgICYtaW5wdXR7XHJcbiAgICAgICAgQGluY2x1ZGUgc2l6ZSg0MHB4LCAzMDBweCk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5cclxuICAgICAgICAmOjpwbGFjZWhvbGRlcntcclxuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6ICRmb250LW1haW47XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgICAgICAgY29sb3I6ICM0NjQ1NDU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgJi1zdWJtaXR7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG5cclxuICAgICAgICBAaW5jbHVkZSBlbGVtZW50LWZsZXgocm93LCBjZW50ZXIsIGNlbnRlcik7XHJcblxyXG4gICAgICAgIEBpbmNsdWRlIHNpemUoNDBweCwgMTgwcHgpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgICBiYWNrZ3JvdW5kOiAjRUQxRDI0O1xyXG4gICAgICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG4uY29udGVudC1zZWN0aW9ue1xyXG4gICAgcGFkZGluZzogMzBweCAwO1xyXG5cclxuICAgICZfX2hlYWRpbmd7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICBjb2xvcjogJGhlYWRlci1iZztcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgZm9udC1zaXplOiAyNXB4O1xyXG4gICAgfVxyXG5cclxuICAgICZfX2NvbnRlbnR7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgICAgIEBpbmNsdWRlIGVsZW1lbnQtZ3JpZChyZXBlYXQoNSwgMWZyKSwgMWZyLCAyMHB4LCAyMHB4KTtcclxuICAgIH1cclxuXHJcbiAgICAmX19idXR0b257XHJcbiAgICAgICAgQGluY2x1ZGUgc2l6ZSg1MHB4LCAyMDBweCk7XHJcbiAgICAgICAgYmFja2dyb3VuZDogJHJlZC1jb2xvcjtcclxuICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcblxyXG4gICAgICAgIEBpbmNsdWRlIGVsZW1lbnQtZmxleChyb3csIGNlbnRlciwgY2VudGVyKTtcclxuXHJcbiAgICAgICAgbWFyZ2luOiAxMHB4IGF1dG87XHJcbiAgICB9XHJcblxyXG4gICAgJl9fc2VhcmNoLWNoYXJhY3RlcntcclxuICAgICAgICB3aWR0aDogZml0LWNvbnRlbnQ7XHJcbiAgICAgICAgbWFyZ2luOiAyMHB4IDA7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgICAgICBAaW5jbHVkZSBlbGVtZW50LWZsZXgocm93LCBjZW50ZXIsIGZsZXgtc3RhcnQpO1xyXG4gICAgfVxyXG59XHJcblxyXG4uaGVybyB7XHJcbiAgICAmX19ibG9ja3tcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkaGVhZGVyLWJnO1xyXG4gICAgICAgIG1pbi13aWR0aDogMjE4cHg7XHJcbiAgICAgICAgaGVpZ2h0OiAzNTBweDtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgIFxyXG5cclxuICAgICAgICAmOmFmdGVye1xyXG4gICAgICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICAgICAgQGluY2x1ZGUgc2l6ZSgxMHB4LCAxMDAlKTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZDogJHJlZC1jb2xvcjtcclxuXHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgICAgICB6LWluZGV4OiAwO1xyXG5cclxuICAgICAgICAgICAgdHJhbnNpdGlvbjogLjNzO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJjpob3ZlcjphZnRlcntcclxuICAgICAgICAgICAgaGVpZ2h0OiA5MHB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICAmOmhvdmVyIGltZyB7XHJcbiAgICAgICAgICAgIHRyYW5zaXRpb246IC4zcztcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLWltYWdlIHtcclxuICAgICAgICBAaW5jbHVkZSBzaXplKDI2MHB4LCAxMDAlKTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgICAgICYgaW1ne1xyXG4gICAgICAgICAgICBAaW5jbHVkZSBpbWFnZTtcclxuICAgICAgICAgICAgdHJhbnNpdGlvbjogLjNzO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19kZXNje1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB6LWluZGV4OiAzO1xyXG5cclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6ICRzZWNvbmQtZm9udDtcclxuICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG5cclxuICAgICAgICBtYXJnaW4tbGVmdDogMTBweDtcclxuICAgIH1cclxufVxyXG5cclxuLnNlYXJjaHtcclxuICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCBibGFjaztcclxuICAgIHdpZHRoOiAzMDBweDtcclxuICAgIHBhZGRpbmc6IDEwcHggMCAxMHB4IDEwcHg7XHJcbiAgICBcclxuICAgICYtYnRue1xyXG4gICAgICAgIC8vIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCBibGFjaztcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgIHotaW5kZXg6IDU7XHJcbiAgICAgICAgaGVpZ2h0OiBmaXQtY29udGVudDtcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgJiBpbWcge1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDM2cHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMjAwcHgpe1xyXG4gICAgLmNvbnRlbnQtc2VjdGlvbl9fY29udGVudHtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg0LCAxZnIpO1xyXG4gICAgfVxyXG59XHJcblxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTBweCl7XHJcbiAgICAuY29udGVudC1zZWN0aW9uX19jb250ZW50e1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDMsIDFmcik7XHJcbiAgICB9XHJcbiAgICAuYmFubmVyIHtcclxuICAgICAgICAmX19oZWFkaW5ne1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDM1cHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLnVzZXJ7XHJcbiAgICAgICAgJi1pbnB1dHtcclxuICAgICAgICAgICAgd2lkdGg6IDI1MHB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICAmLXN1Ym1pdHtcclxuICAgICAgICAgICAgd2lkdGg6IDE1MHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpe1xyXG4gICAgLmhlYWRlcntcclxuICAgICAgICBoZWlnaHQ6IDcwcHg7XHJcbiAgICB9XHJcbiAgICAubG9nb3tcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG4gICAgLm5hdntcclxuICAgICAgICAmX19saXN0e1xyXG4gICAgICAgICAgICAvLyBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgICAgICAgICAgQGluY2x1ZGUgZWxlbWVudC1mbGV4KGNvbHVtbiwgY2VudGVyLCBjZW50ZXIpO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEwMHZoO1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgei1pbmRleDogMTAwO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAgcmdiYSg0MywgNDMsIDQ0LCAwLjUpO1xyXG4gICAgICAgICAgICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoOTZweCk7XHJcbiAgICAgICAgICAgIHRvcDogMHB4O1xyXG4gICAgICAgICAgICByaWdodDogLTEwMCU7XHJcblxyXG4gICAgICAgICAgICB0cmFuc2l0aW9uOiAuM3M7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAmIGxpOm5vdCg6bGFzdC1jaGlsZCl7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDBweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAmX19idXJnZXJ7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgdG9wOiA1MCU7XHJcbiAgICAgICAgICAgIHJpZ2h0OiAyMHB4O1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XHJcbiAgICAgICAgICAgIHotaW5kZXg6IDIwMDtcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgIC8vIHRyYW5zaXRpb246IC4zc1xyXG4gICAgICAgIH1cclxuICAgICAgICAmX19saW5re1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDIwMCU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NTBweCl7XHJcbiAgICAuY29udGVudC1zZWN0aW9uX19jb250ZW50e1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDFmcik7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU4MHB4KXtcclxuICAgIC5iYW5uZXIge1xyXG4gICAgICAgICZfX2hlYWRpbmcge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDMwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICZfX2lucHV0cyB7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBcclxuICAgICAgICAgICAgJiA+KiB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAudXNlci1pbnB1dCB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbn1cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDkwcHgpe1xyXG4gICAgLmNvbnRlbnQtc2VjdGlvbl9fY29udGVudHtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxLCAxZnIpO1xyXG4gICAgfVxyXG4gICAgLmNvbnRlbnQtc2VjdGlvbl9fc2VhcmNoLWNoYXJhY3RlciwgLnNlYXJjaHtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgIH1cclxufSIsIip7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxufVxyXG51bCwgb2x7XHJcbiAgICBsaXN0LXN0eWxlOiBub25lO1xyXG59XHJcblxyXG5pbnB1dHtcclxuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgZm9udDogaW5oZXJpdDtcclxuXHJcbiAgICAmOmZvY3Vze1xyXG4gICAgICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICB9XHJcbn1cclxuYnV0dG9ue1xyXG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBmb250OiBpbmhlcml0O1xyXG59XHJcblxyXG5he1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG59IiwiQG1peGluIGVsZW1lbnQtZmxleCgkZGlyZWN0aW9uLCAkYWxpZ24sICRqdXN0aWZ5KXtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogJGRpcmVjdGlvbjtcclxuICAgIGFsaWduLWl0ZW1zOiAkYWxpZ247XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6ICRqdXN0aWZ5O1xyXG59XHJcblxyXG5AbWl4aW4gZWxlbWVudC1ncmlkKCRndGNvbHVtbnMsICRndHJvd3MsICRyZ2FwLCAkY2dhcCl7XHJcbiAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAkZ3Rjb2x1bW5zO1xyXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAkZ3Ryb3dzO1xyXG4gICAgcm93LWdhcDogJHJnYXA7XHJcbiAgICBjb2x1bW4tZ2FwOiAkY2dhcDtcclxufVxyXG5cclxuQG1peGluIHNpemUoJGhlaWdodCwgJHdpZHRoKXtcclxuICAgIGhlaWdodDogJGhlaWdodDtcclxuICAgIHdpZHRoOiAkd2lkdGg7XHJcbn1cclxuXHJcbkBtaXhpbiBpbWFnZXtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgb2JqZWN0LWZpdDogY292ZXI7XHJcbn1cclxuIiwiLm1vZGFsIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMzMsIDMzLCAzMywgMC42MzkpO1xyXG4gICAgQGluY2x1ZGUgc2l6ZSgxMDAlLCAxMDAlKTtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcblxyXG4gICAgei1pbmRleDogNztcclxuICAgIEBpbmNsdWRlIGVsZW1lbnQtZmxleChyb3csIGNlbnRlciwgY2VudGVyKTtcclxuXHJcbiAgICAmX19jaGFyYWN0ZXJfX2lubmVyIHtcclxuICAgICAgICBAaW5jbHVkZSBzaXplKDQwMHB4LCA3MDBweCk7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgfVxyXG59XHJcblxyXG4uY2hhcmFjdGVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgICZfX2RldGFpbHMge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZ2FwOiAyMHB4O1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgIH1cclxuXHJcbiAgICAmX19pbmZvIHtcclxuICAgICAgICBwYWRkaW5nOiAyMHB4IDMwcHggMjBweCAxNXB4O1xyXG5cclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgIHdpZHRoOiA2MCU7XHJcbiAgICB9XHJcblxyXG4gICAgJl9faW1nIHtcclxuICAgICAgICBtaW4td2lkdGg6IDI4NXB4O1xyXG4gICAgICAgIC8vIG1pbi1oZWlnaHQ6IDQwMHB4O1xyXG4gICAgICAgIC8vIGhlaWdodDogZml0LWNvbnRlbnQ7XHJcblxyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6cmdiKDMwLCAyNSwgMjUpXHJcbiAgICB9XHJcblxyXG4gICAgJi1pbWFnZSB7XHJcbiAgICAgICAgd2lkdGg6IDI4NXB4O1xyXG4gICAgICAgIGhlaWdodDogNDAwcHg7XHJcbiAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fbmFtZSB7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgICAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgbWF4LXdpZHRoOiA5MCU7XHJcblxyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICAgICAgLy8gbWFyZ2luLXRvcDogMTBweDtcclxuICAgIH1cclxuXHJcbiAgICAmX19idXR0b25ze1xyXG4gICAgICAgIGZsZXg6IDAgMCBhdXRvO1xyXG4gICAgICAgIGdhcDogOHB4O1xyXG5cclxuICAgICAgICBAaW5jbHVkZSBlbGVtZW50LWZsZXgocm93LCBjZW50ZXIsIHNwYWNlLWJldHdlZW4pXHJcbiAgICB9XHJcblxyXG4gICAgJl9fYnV0dG9uIHtcclxuICAgICAgICBAaW5jbHVkZSBzaXplKDUwcHgsIDE1MHB4KTtcclxuICAgICAgICBmb250LWZhbWlseTogJGZvbnQtbWFpbjtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG5cclxuICAgIH1cclxufVxyXG5cclxuLnZpZXctY29taWNzIHtcclxuICAgIGJvcmRlcjogMS41cHggc29saWQgJGhlYWRlci1iZztcclxufVxyXG4uYWRkIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRyZWQtY29sb3I7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbn1cclxuLmluZm9fX2lubmVyIHtcclxuICAgIGZsZXg6IDEgMCBhdXRvO1xyXG59XHJcblxyXG4uY29taWNzIHtcclxuICAgICZfX2xpbmsge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgICAgICBjb2xvcjogaW5oZXJpdDtcclxuXHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4uY2xvc2Uge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgcmlnaHQ6IDEwcHg7XHJcbiAgICB0b3A6IDEwcHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5oZWFkIHtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG59XHJcblxyXG4uZGVzY3JpcHRpb24tdGV4dCB7XHJcbiAgICBmb250LXNpemU6IDEzcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gICAgY29sb3I6ICM2MDVFNUU7XHJcbn1cclxuXHJcbi5jb21pY3NfX2xpc3Qge1xyXG4gICAgY29sb3I6ICM2MDVFNUU7XHJcbn0iLCJcclxuLmxvYWRlciB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDUwJTtcclxuICAgIGxlZnQ6IDUwJTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgICAgICZfX2lubmVyIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxMHB4O1xyXG4gICAgICAgICAgICBtYXJnaW46IDUwcHggYXV0bztcclxuICAgICAgICAgICAgdGV4dC1pbmRlbnQ6IC05OTk5ZW07XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMWVtO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDExZW07XHJcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZDogIzY5Njk2OTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjNjk2OTY5IDEwJSwgcmdiYSgxMDUsMTA1LDEwNSwgMCkgNDIlKTtcclxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICBhbmltYXRpb246IGxvYWQzIDEuNHMgaW5maW5pdGUgbGluZWFyO1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooMCk7XHJcblxyXG4gICAgICAgICAgICAmOmJlZm9yZSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNTAlO1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA1MCU7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjNjk2OTY5O1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTAwJSAwIDAgMDtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJjphZnRlciB7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDc1JTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogNzUlO1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgICAgICAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW46IGF1dG87XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgICAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgfVxyXG59XHJcblxyXG5ALXdlYmtpdC1rZXlmcmFtZXMgbG9hZDMge1xyXG4gICAgMCUge1xyXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xyXG4gICAgfVxyXG4gICAgMTAwJSB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcclxuICAgIH1cclxufVxyXG5Aa2V5ZnJhbWVzIGxvYWQzIHtcclxuICAgIDAlIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcclxuICAgIH1cclxuICAgIDEwMCUge1xyXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XHJcbiAgICB9XHJcbn0iLCIuaGVhZGVye1xyXG4gICAgZm9udC1mYW1pbHk6ICRmb250LW1haW47XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkaGVhZGVyLWJnO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDkwcHg7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgLy9wb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbi5sb2dve1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBpbWd7XHJcbiAgICAgICAgaGVpZ2h0OiA1MHB4O1xyXG4gICAgfVxyXG59XHJcblxyXG4ubmF2e1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG5cclxuICAgICZfX2xpc3R7XHJcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG5cclxuICAgICAgICBAaW5jbHVkZSBlbGVtZW50LWZsZXgocm93LCBjZW50ZXIsIGNlbnRlcik7XHJcblxyXG4gICAgICAgIHBhZGRpbmc6IDEwcHggMjBweDtcclxuXHJcbiAgICAgICAgJiBsaTpub3QoOmxhc3QtY2hpbGQpe1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDMwcHg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcbiAgICAmX19saW5re1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiAkZm9udC1tYWluO1xyXG4gICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgIHRyYW5zaXRpb246IC4zcztcclxuXHJcbiAgICAgICAgJjpob3ZlcntcclxuICAgICAgICAgICAgY29sb3I6ICRyZWQtY29sb3I7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2J1cmdlcntcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG4gICAgJl9fY2xvc2V7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgIHJpZ2h0OiAyMHB4O1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcclxuICAgICAgICB6LWluZGV4OiAyMDA7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG4iXX0= */