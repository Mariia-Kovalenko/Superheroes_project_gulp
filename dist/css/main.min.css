*{margin:0;padding:0;box-sizing:border-box}ol,ul{list-style:none}button,input{background:0 0;border:0;font:inherit}input:focus{outline:0}a{text-decoration:none}body{font-family:"Exo",sans-serif}.header,.wrapper{width:100%}.header{background:#232323;font-family:"Exo",sans-serif;height:90px}.logo{display:block}.logo img{height:50px}.nav,.nav__list{height:100%}.nav__list{padding:10px 20px}.nav__list,.nav__list-group{display:flex;flex-direction:row;align-items:center;justify-content:center}.nav__list-group:first-child li{margin-right:40px}.nav__list-group:last-child li{margin-left:40px}.nav__link{font:500 14px "Exo",sans-serif;color:#fff;text-transform:uppercase;transition:.3s}.nav__link:hover{color:#ed1d24}.banner{height:500px;width:100%;background:url(/img/banner.jpg);background-size:cover;background-repeat:no-repeat;background-attachment:fixed}.banner__inner{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);color:#fff}.banner__heading{font-size:45px;text-align:center;text-transform:uppercase;margin-bottom:20px}.banner__inputs{display:flex;flex-direction:row;align-items:center;justify-content:center}.user-input{height:40px;width:300px;background:#fff;font-size:14px;padding:10px;display:inline-block}.user-input::placeholder{font:14px "Exo",sans-serif;text-transform:uppercase;color:#464545}.user-submit{display:inline-block;color:#fff;text-transform:uppercase;display:flex;flex-direction:row;align-items:center;justify-content:center;height:40px;width:180px;font-size:14px;background:#ed1d24;padding:10px}.content-section{padding-top:30px}.content-section__heading{text-transform:uppercase;color:#ed1d24;text-align:center;font-size:25px}.content-section__content{margin:0 auto;max-width:1200px;padding:15px;display:grid;grid-template-columns:repeat(4,1fr);grid-template-rows:1fr;row-gap:20px;column-gap:20px}.hero-image{height:350px;width:100%;object-fit:cover}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */