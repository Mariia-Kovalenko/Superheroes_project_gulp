*{margin:0;padding:0;box-sizing:border-box}ol,ul{list-style:none}button,input{background:0 0;border:0;font:inherit}input:focus{outline:0}a{text-decoration:none}.hide{display:none}body{font-family:"Exo",sans-serif}.header,.wrapper{width:100%}#main{height:100vh;overflow:hidden;position:relative}.header{background:#232323;font-family:"Exo",sans-serif;height:90px;position:absolute;top:0;left:0}.logo{display:block}.logo img{height:50px}.nav,.nav__list{height:100%}.nav__list{display:flex;flex-direction:row;align-items:center;justify-content:center;padding:10px 20px}.nav__list li:not(:last-child){margin-right:30px}.nav__link{font:500 14px "Exo",sans-serif;color:#fff;text-transform:uppercase;transition:.3s}.nav__link:hover{color:#ed1d24}.nav__burger{display:none}.nav__close{position:absolute;top:50%;right:20px;transform:translateY(-50%);z-index:200}.banner{height:500px;width:100%;background:url(/img/banner.jpg);background-size:cover;background-repeat:no-repeat;background-attachment:fixed}.banner__inner{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);color:#fff}.banner__heading{font-size:45px;text-align:center;text-transform:uppercase;margin-bottom:20px}.banner__inputs{display:flex;flex-direction:row;align-items:center;justify-content:center}.user-input{height:40px;width:300px;background:#fff;font-size:14px;padding:10px;display:inline-block}.user-input::placeholder{font:14px "Exo",sans-serif;text-transform:uppercase;color:#464545}.user-submit{display:inline-block;color:#fff;text-transform:uppercase;display:flex;flex-direction:row;align-items:center;justify-content:center;height:40px;width:180px;font-size:14px;background:#ed1d24;padding:10px}.content-section{padding:30px 0}.content-section__heading{text-transform:uppercase;color:#232323;text-align:center;font-size:25px}.content-section__content{margin:0 auto;max-width:1200px;padding:15px;display:grid;grid-template-columns:repeat(5,1fr);grid-template-rows:1fr;row-gap:20px;column-gap:20px}.content-section__button{height:50px;width:200px;background:#ed1d24;color:#fff;font-size:14px;text-transform:uppercase;display:block;display:flex;flex-direction:row;align-items:center;justify-content:center;margin:10px auto}.hero__block{background:#232323;min-width:218px;height:350px;position:relative;cursor:pointer;overflow:hidden}.hero__block:after{content:"";height:10px;width:100%;background:#ed1d24;position:absolute;bottom:0;z-index:0;transition:.3s}.hero__block:hover:after{height:90px}.hero__block:hover img{transition:.3s;transform:scale(1.2)}.hero-image{height:260px;width:100%;margin-bottom:20px}.hero-image img{height:100%;width:100%;object-fit:cover;transition:.3s}.hero__desc{font:500 18px "Roboto",sans-serif;position:absolute;z-index:3;text-transform:uppercase;color:#fff;margin-left:10px}@media screen and (max-width:1200px){.content-section__content{grid-template-columns:repeat(4,1fr)}}@media screen and (max-width:990px){.content-section__content{grid-template-columns:repeat(3,1fr)}.banner__heading{font-size:35px}.user-input{width:250px}.user-submit{width:150px}}@media screen and (max-width:768px){.header{height:70px}.logo{display:none}.nav__list{position:fixed;display:flex;flex-direction:column;align-items:center;justify-content:center;height:100vh;width:100%;z-index:100;background-color:rgba(43,43,44,.5);backdrop-filter:blur(96px);top:0;right:-100%;transition:.3s}.nav__list li:not(:last-child){margin-right:0}.nav__burger{position:absolute;top:50%;right:20px;transform:translateY(-50%);z-index:200;display:block}.nav__link{text-align:center;font-size:20px;line-height:200%}}@media screen and (max-width:750px){.content-section__content{grid-template-columns:repeat(2,1fr)}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */